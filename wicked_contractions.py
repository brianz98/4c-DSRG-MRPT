import numpy as np
import time

def H_T_C0(C1, C2, F, V, T1, T2, gamma1, eta1, lambda2, lambda3, mf, verbose=False):
	# 24 lines
	t0 = time.time()
	C0 = .0j
	hc = mf.hc
	ha = mf.ha
	pa = mf.pa
	pv = mf.pv
	c = mf.core
	a = mf.active
	v = mf.virt

	C0 += +1.00000000 * np.einsum('iu,iv,vu->', F[c,a], T1[hc,pa], eta1, optimize='optimal')
	C0 += -0.50000000 * np.einsum('iu,ivwx,wxuv->', F[c,a], T2[hc,ha,pa,pa], lambda2, optimize='optimal')
	C0 += +1.00000000 * np.einsum('ia,ia->', F[c,v], T1[hc,pv], optimize='optimal')
	C0 += +1.00000000 * np.einsum('ua,va,uv->', F[a,v], T1[ha,pv], gamma1, optimize='optimal')
	C0 += -0.50000000 * np.einsum('ua,vwxa,uxvw->', F[a,v], T2[ha,ha,pa,pv], lambda2, optimize='optimal')
	C0 += -0.50000000 * np.einsum('iu,ivwx,uvwx->', T1[hc,pa], V[c,a,a,a], lambda2, optimize='optimal')
	C0 += -0.50000000 * np.einsum('ua,vwxa,vwux->', T1[ha,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C0 += +0.25000000 * np.einsum('ijuv,ijwx,vx,uw->', T2[hc,hc,pa,pa], V[c,c,a,a], eta1, eta1, optimize='optimal')
	C0 += +0.12500000 * np.einsum('ijuv,ijwx,uvwx->', T2[hc,hc,pa,pa], V[c,c,a,a], lambda2, optimize='optimal')
	C0 += +0.50000000 * np.einsum('iuvw,ixyz,wz,vy,xu->', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, eta1, gamma1, optimize='optimal')
	C0 += +1.00000000 * np.einsum('iuvw,ixyz,wz,vxuy->', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, lambda2, optimize='optimal')
	C0 += +0.25000000 * np.einsum('iuvw,ixyz,xu,vwyz->', T2[hc,ha,pa,pa], V[c,a,a,a], gamma1, lambda2, optimize='optimal')
	C0 += +0.25000000 * np.einsum('iuvw,ixyz,vwxuyz->', T2[hc,ha,pa,pa], V[c,a,a,a], lambda3, optimize='optimal')
	C0 += +0.50000000 * np.einsum('ijua,ijva,uv->', T2[hc,hc,pa,pv], V[c,c,a,v], eta1, optimize='optimal')
	C0 += +1.00000000 * np.einsum('iuva,iwxa,vx,wu->', T2[hc,ha,pa,pv], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C0 += +1.00000000 * np.einsum('iuva,iwxa,vwux->', T2[hc,ha,pa,pv], V[c,a,a,v], lambda2, optimize='optimal')
	C0 += +0.50000000 * np.einsum('uvwa,xyza,wz,yv,xu->', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, gamma1, gamma1, optimize='optimal')
	C0 += +0.25000000 * np.einsum('uvwa,xyza,wz,xyuv->', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, lambda2, optimize='optimal')
	C0 += +1.00000000 * np.einsum('uvwa,xyza,yv,wxuz->', T2[ha,ha,pa,pv], V[a,a,a,v], gamma1, lambda2, optimize='optimal')
	C0 += -0.25000000 * np.einsum('uvwa,xyza,wxyuvz->', T2[ha,ha,pa,pv], V[a,a,a,v], lambda3, optimize='optimal')
	C0 += +0.25000000 * np.einsum('ijab,ijab->', T2[hc,hc,pv,pv], V[c,c,v,v], optimize='optimal')
	C0 += +0.50000000 * np.einsum('iuab,ivab,vu->', T2[hc,ha,pv,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C0 += +0.25000000 * np.einsum('uvab,wxab,xv,wu->', T2[ha,ha,pv,pv], V[a,a,v,v], gamma1, gamma1, optimize='optimal')
	C0 += +0.12500000 * np.einsum('uvab,wxab,wxuv->', T2[ha,ha,pv,pv], V[a,a,v,v], lambda2, optimize='optimal')

	t1 = time.time()
	if verbose: print("H_T_C0 took {:.4f} seconds to run.".format(t1-t0))

	return C0

def H1_T1_C1(C1, C2, F, V, T1, T2, gamma1, eta1, lambda2, lambda3, mf, verbose=False):
	# 24 lines
	t0 = time.time()
	hc = mf.hc
	ha = mf.ha
	pa = mf.pa
	pv = mf.pv
	c = mf.core
	a = mf.active
	v = mf.virt

	C1[a,a] += -1.00000000 * np.einsum('iu,iv->uv', F[c,a], T1[hc,pa], optimize='optimal')
	C1[a,a] += +1.00000000 * np.einsum('ua,va->vu', F[a,v], T1[ha,pv], optimize='optimal')
	C1[a,c] += +1.00000000 * np.einsum('ia,ua->ui', F[c,v], T1[ha,pv], optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('iu,ia->ua', F[c,a], T1[hc,pv], optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('uv,wa,uw->va', F[a,a], T1[ha,pv], eta1, optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('uv,wa,uw->va', F[a,a], T1[ha,pv], gamma1, optimize='optimal')
	C1[a,v] += +1.00000000 * np.einsum('ab,ub->ua', F[v,v], T1[ha,pv], optimize='optimal')
	C1[c,a] += -1.00000000 * np.einsum('ij,iu->ju', F[c,c], T1[hc,pa], optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('uv,iw,wv->iu', F[a,a], T1[hc,pa], eta1, optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('uv,iw,wv->iu', F[a,a], T1[hc,pa], gamma1, optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('ua,ia->iu', F[a,v], T1[hc,pv], optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('iu,jv,vu->ji', F[c,a], T1[hc,pa], eta1, optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('iu,jv,vu->ji', F[c,a], T1[hc,pa], gamma1, optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('ia,ja->ji', F[c,v], T1[hc,pv], optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('ij,ia->ja', F[c,c], T1[hc,pv], optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('ui,va,uv->ia', F[a,c], T1[ha,pv], eta1, optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('ui,va,uv->ia', F[a,c], T1[ha,pv], gamma1, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('au,iv,vu->ia', F[v,a], T1[hc,pa], eta1, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('au,iv,vu->ia', F[v,a], T1[hc,pa], gamma1, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('ab,ib->ia', F[v,v], T1[hc,pv], optimize='optimal')
	C1[v,a] += -1.00000000 * np.einsum('ia,iu->au', F[c,v], T1[hc,pa], optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('ia,ib->ab', F[c,v], T1[hc,pv], optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('ua,vb,uv->ab', F[a,v], T1[ha,pv], eta1, optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('ua,vb,uv->ab', F[a,v], T1[ha,pv], gamma1, optimize='optimal')

	t1 = time.time()
	if verbose: print("H1_T1_C1 took {:.4f} seconds to run.".format(t1-t0))

def H1_T2_C1(C1, C2, F, V, T1, T2, gamma1, eta1, lambda2, lambda3, mf, verbose=False):
	# 18 lines
	t0 = time.time()
	hc = mf.hc
	ha = mf.ha
	pa = mf.pa
	pv = mf.pv
	c = mf.core
	a = mf.active
	v = mf.virt

	C1[a,a] += -1.00000000 * np.einsum('iu,ivwx,xu->vw', F[c,a], T2[hc,ha,pa,pa], eta1, optimize='optimal')
	C1[a,a] += -1.00000000 * np.einsum('ia,iuva->uv', F[c,v], T2[hc,ha,pa,pv], optimize='optimal')
	C1[a,a] += +1.00000000 * np.einsum('ua,vwxa,uw->vx', F[a,v], T2[ha,ha,pa,pv], gamma1, optimize='optimal')
	C1[a,v] += +1.00000000 * np.einsum('iu,ivwa,wu->va', F[c,a], T2[hc,ha,pa,pv], eta1, optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('ia,iuba->ub', F[c,v], T2[hc,ha,pv,pv], optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('uv,wxya,yv,ux->wa', F[a,a], T2[ha,ha,pa,pv], eta1, gamma1, optimize='optimal')
	C1[a,v] += +1.00000000 * np.einsum('uv,wxya,ux,yv->wa', F[a,a], T2[ha,ha,pa,pv], eta1, gamma1, optimize='optimal')
	C1[a,v] += +1.00000000 * np.einsum('ua,vwba,uw->vb', F[a,v], T2[ha,ha,pv,pv], gamma1, optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('iu,jivw,wu->jv', F[c,a], T2[hc,hc,pa,pa], eta1, optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('ia,jiua->ju', F[c,v], T2[hc,hc,pa,pv], optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('uv,iwxy,yv,uw->ix', F[a,a], T2[hc,ha,pa,pa], eta1, gamma1, optimize='optimal')
	C1[c,a] += -1.00000000 * np.einsum('uv,iwxy,uw,yv->ix', F[a,a], T2[hc,ha,pa,pa], eta1, gamma1, optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('ua,ivwa,uv->iw', F[a,v], T2[hc,ha,pa,pv], gamma1, optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('iu,jiva,vu->ja', F[c,a], T2[hc,hc,pa,pv], eta1, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('ia,jiba->jb', F[c,v], T2[hc,hc,pv,pv], optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('uv,iwxa,xv,uw->ia', F[a,a], T2[hc,ha,pa,pv], eta1, gamma1, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('uv,iwxa,uw,xv->ia', F[a,a], T2[hc,ha,pa,pv], eta1, gamma1, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('ua,ivba,uv->ib', F[a,v], T2[hc,ha,pv,pv], gamma1, optimize='optimal')

	t1 = time.time()
	if verbose: print("H1_T2_C1 took {:.4f} seconds to run.".format(t1-t0))

def H2_T1_C1(C1, C2, F, V, T1, T2, gamma1, eta1, lambda2, lambda3, mf, verbose=False):
	# 27 lines
	t0 = time.time()
	hc = mf.hc
	ha = mf.ha
	pa = mf.pa
	pv = mf.pv
	c = mf.core
	a = mf.active
	v = mf.virt

	C1[a,a] += -1.00000000 * np.einsum('iu,ivwx,ux->wv', T1[hc,pa], V[c,a,a,a], eta1, optimize='optimal')
	C1[a,a] += -1.00000000 * np.einsum('ia,iuva->vu', T1[hc,pv], V[c,a,a,v], optimize='optimal')
	C1[a,a] += +1.00000000 * np.einsum('ua,vwxa,wu->xv', T1[ha,pv], V[a,a,a,v], gamma1, optimize='optimal')
	C1[a,c] += +1.00000000 * np.einsum('iu,jivw,uw->vj', T1[hc,pa], V[c,c,a,a], eta1, optimize='optimal')
	C1[a,c] += +1.00000000 * np.einsum('ia,jiua->uj', T1[hc,pv], V[c,c,a,v], optimize='optimal')
	C1[a,c] += +1.00000000 * np.einsum('ua,ivwa,vu->wi', T1[ha,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('iu,iavw,uw->va', T1[hc,pa], V[c,v,a,a], eta1, optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('ia,ibua->ub', T1[hc,pv], V[c,v,a,v], optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('ua,vbwa,vu->wb', T1[ha,pv], V[a,v,a,v], gamma1, optimize='optimal')
	C1[c,a] += -1.00000000 * np.einsum('iu,ivjw,uw->jv', T1[hc,pa], V[c,a,c,a], eta1, optimize='optimal')
	C1[c,a] += -1.00000000 * np.einsum('ia,iuja->ju', T1[hc,pv], V[c,a,c,v], optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('ua,vwia,wu->iv', T1[ha,pv], V[a,a,c,v], gamma1, optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('iu,jikv,uv->kj', T1[hc,pa], V[c,c,c,a], eta1, optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('ia,jika->kj', T1[hc,pv], V[c,c,c,v], optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('ua,ivja,vu->ji', T1[ha,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('iu,iajv,uv->ja', T1[hc,pa], V[c,v,c,a], eta1, optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('ia,ibja->jb', T1[hc,pv], V[c,v,c,v], optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('ua,vbia,vu->ib', T1[ha,pv], V[a,v,c,v], gamma1, optimize='optimal')
	C1[v,a] += +1.00000000 * np.einsum('iu,ivwa,uw->av', T1[hc,pa], V[c,a,a,v], eta1, optimize='optimal')
	C1[v,a] += -1.00000000 * np.einsum('ia,iuba->bu', T1[hc,pv], V[c,a,v,v], optimize='optimal')
	C1[v,a] += +1.00000000 * np.einsum('ua,vwba,wu->bv', T1[ha,pv], V[a,a,v,v], gamma1, optimize='optimal')
	C1[v,c] += -1.00000000 * np.einsum('iu,jiva,uv->aj', T1[hc,pa], V[c,c,a,v], eta1, optimize='optimal')
	C1[v,c] += +1.00000000 * np.einsum('ia,jiba->bj', T1[hc,pv], V[c,c,v,v], optimize='optimal')
	C1[v,c] += +1.00000000 * np.einsum('ua,ivba,vu->bi', T1[ha,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C1[v,v] += +1.00000000 * np.einsum('iu,iavb,uv->ba', T1[hc,pa], V[c,v,a,v], eta1, optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('ia,ibca->cb', T1[hc,pv], V[c,v,v,v], optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('ua,vbca,vu->cb', T1[ha,pv], V[a,v,v,v], gamma1, optimize='optimal')

	t1 = time.time()
	if verbose: print("H2_T1_C1 took {:.4f} seconds to run.".format(t1-t0))

def H2_T2_C1(C1, C2, F, V, T1, T2, gamma1, eta1, lambda2, lambda3, mf, verbose=False):
	# 158 lines
	t0 = time.time()
	hc = mf.hc
	ha = mf.ha
	pa = mf.pa
	pv = mf.pv
	c = mf.core
	a = mf.active
	v = mf.virt

	C1[a,a] += -0.50000000 * np.einsum('ijuv,ijwx,vx->wu', T2[hc,hc,pa,pa], V[c,c,a,a], eta1, optimize='optimal')
	C1[a,a] += +0.50000000 * np.einsum('iuvw,ixyz,wxyz->uv', T2[hc,ha,pa,pa], V[c,a,a,a], lambda2, optimize='optimal')
	C1[a,a] += -1.00000000 * np.einsum('iuvw,ixyz,wz,xu->yv', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, gamma1, optimize='optimal')
	C1[a,a] += -1.00000000 * np.einsum('iuvw,ixyz,wxuz->yv', T2[hc,ha,pa,pa], V[c,a,a,a], lambda2, optimize='optimal')
	C1[a,a] += -0.50000000 * np.einsum('ijua,ijva->vu', T2[hc,hc,pa,pv], V[c,c,a,v], optimize='optimal')
	C1[a,a] += -1.00000000 * np.einsum('iuva,iwxa,wu->xv', T2[hc,ha,pa,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C1[a,a] += -0.50000000 * np.einsum('uvwa,xyza,xyvz->uw', T2[ha,ha,pa,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C1[a,a] += -0.50000000 * np.einsum('uvwa,xyza,yv,xu->zw', T2[ha,ha,pa,pv], V[a,a,a,v], gamma1, gamma1, optimize='optimal')
	C1[a,a] += -0.25000000 * np.einsum('uvwa,xyza,xyuv->zw', T2[ha,ha,pa,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C1[a,a] += +0.50000000 * np.einsum('iuvw,ixyz,wz,vy->ux', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, eta1, optimize='optimal')
	C1[a,a] += +0.25000000 * np.einsum('iuvw,ixyz,vwyz->ux', T2[hc,ha,pa,pa], V[c,a,a,a], lambda2, optimize='optimal')
	C1[a,a] += -0.50000000 * np.einsum('iuvw,ixyz,vwuz->yx', T2[hc,ha,pa,pa], V[c,a,a,a], lambda2, optimize='optimal')
	C1[a,a] += +1.00000000 * np.einsum('iuva,iwxa,vx->uw', T2[hc,ha,pa,pv], V[c,a,a,v], eta1, optimize='optimal')
	C1[a,a] += +1.00000000 * np.einsum('uvwa,xyza,wz,yv->ux', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, gamma1, optimize='optimal')
	C1[a,a] += +1.00000000 * np.einsum('uvwa,xyza,wyvz->ux', T2[ha,ha,pa,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C1[a,a] += +0.50000000 * np.einsum('uvwa,xyza,wyuv->zx', T2[ha,ha,pa,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C1[a,a] += +0.50000000 * np.einsum('iuab,ivab->uv', T2[hc,ha,pv,pv], V[c,a,v,v], optimize='optimal')
	C1[a,a] += +0.50000000 * np.einsum('uvab,wxab,xv->uw', T2[ha,ha,pv,pv], V[a,a,v,v], gamma1, optimize='optimal')
	C1[a,c] += -0.50000000 * np.einsum('iuvw,jixy,wy,vx->uj', T2[hc,ha,pa,pa], V[c,c,a,a], eta1, eta1, optimize='optimal')
	C1[a,c] += -0.25000000 * np.einsum('iuvw,jixy,vwxy->uj', T2[hc,ha,pa,pa], V[c,c,a,a], lambda2, optimize='optimal')
	C1[a,c] += +0.50000000 * np.einsum('iuvw,jixy,vwuy->xj', T2[hc,ha,pa,pa], V[c,c,a,a], lambda2, optimize='optimal')
	C1[a,c] += -1.00000000 * np.einsum('iuva,jiwa,vw->uj', T2[hc,ha,pa,pv], V[c,c,a,v], eta1, optimize='optimal')
	C1[a,c] += +1.00000000 * np.einsum('uvwa,ixya,wy,xv->ui', T2[ha,ha,pa,pv], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C1[a,c] += +1.00000000 * np.einsum('uvwa,ixya,wxvy->ui', T2[ha,ha,pa,pv], V[c,a,a,v], lambda2, optimize='optimal')
	C1[a,c] += +0.50000000 * np.einsum('uvwa,ixya,wxuv->yi', T2[ha,ha,pa,pv], V[c,a,a,v], lambda2, optimize='optimal')
	C1[a,c] += -0.50000000 * np.einsum('iuab,jiab->uj', T2[hc,ha,pv,pv], V[c,c,v,v], optimize='optimal')
	C1[a,c] += +0.50000000 * np.einsum('uvab,iwab,wv->ui', T2[ha,ha,pv,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C1[a,v] += +0.50000000 * np.einsum('iuvw,iaxy,wy,vx->ua', T2[hc,ha,pa,pa], V[c,v,a,a], eta1, eta1, optimize='optimal')
	C1[a,v] += +0.25000000 * np.einsum('iuvw,iaxy,vwxy->ua', T2[hc,ha,pa,pa], V[c,v,a,a], lambda2, optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('iuvw,iaxy,vwuy->xa', T2[hc,ha,pa,pa], V[c,v,a,a], lambda2, optimize='optimal')
	C1[a,v] += +0.50000000 * np.einsum('ijua,ijvw,uw->va', T2[hc,hc,pa,pv], V[c,c,a,a], eta1, optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('iuva,iwxy,vwxy->ua', T2[hc,ha,pa,pv], V[c,a,a,a], lambda2, optimize='optimal')
	C1[a,v] += +1.00000000 * np.einsum('iuva,iwxy,vy,wu->xa', T2[hc,ha,pa,pv], V[c,a,a,a], eta1, gamma1, optimize='optimal')
	C1[a,v] += +1.00000000 * np.einsum('iuva,iwxy,vwuy->xa', T2[hc,ha,pa,pv], V[c,a,a,a], lambda2, optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('uvwa,xyzr,yv,wxzr->ua', T2[ha,ha,pa,pv], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[a,v] += +0.50000000 * np.einsum('uvwa,xyzr,wr,xyvz->ua', T2[ha,ha,pa,pv], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('uvwa,xyzr,yv,wxzr->ua', T2[ha,ha,pa,pv], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('uvwa,xyzr,wz,xyvr->ua', T2[ha,ha,pa,pv], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[a,v] += +0.50000000 * np.einsum('uvwa,xyzr,yv,xu,wr->za', T2[ha,ha,pa,pv], V[a,a,a,a], eta1, eta1, gamma1, optimize='optimal')
	C1[a,v] += +1.00000000 * np.einsum('uvwa,xyzr,yv,wxur->za', T2[ha,ha,pa,pv], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[a,v] += +0.50000000 * np.einsum('uvwa,xyzr,wr,yv,xu->za', T2[ha,ha,pa,pv], V[a,a,a,a], eta1, gamma1, gamma1, optimize='optimal')
	C1[a,v] += +0.25000000 * np.einsum('uvwa,xyzr,wr,xyuv->za', T2[ha,ha,pa,pv], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[a,v] += +1.00000000 * np.einsum('uvwa,xyzr,yv,wxur->za', T2[ha,ha,pa,pv], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[a,v] += +0.25000000 * np.einsum('uvwa,xyzr,wr,xyuv->za', T2[ha,ha,pa,pv], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[a,v] += +1.00000000 * np.einsum('iuva,ibwa,vw->ub', T2[hc,ha,pa,pv], V[c,v,a,v], eta1, optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('uvwa,xbya,wy,xv->ub', T2[ha,ha,pa,pv], V[a,v,a,v], eta1, gamma1, optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('uvwa,xbya,wxvy->ub', T2[ha,ha,pa,pv], V[a,v,a,v], lambda2, optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('uvwa,xbya,wxuv->yb', T2[ha,ha,pa,pv], V[a,v,a,v], lambda2, optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('ijab,ijub->ua', T2[hc,hc,pv,pv], V[c,c,a,v], optimize='optimal')
	C1[a,v] += -1.00000000 * np.einsum('iuab,ivwb,vu->wa', T2[hc,ha,pv,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('uvab,wxyb,wxvy->ua', T2[ha,ha,pv,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('uvab,wxyb,xv,wu->ya', T2[ha,ha,pv,pv], V[a,a,a,v], gamma1, gamma1, optimize='optimal')
	C1[a,v] += -0.25000000 * np.einsum('uvab,wxyb,wxuv->ya', T2[ha,ha,pv,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C1[a,v] += +0.50000000 * np.einsum('iuab,icab->uc', T2[hc,ha,pv,pv], V[c,v,v,v], optimize='optimal')
	C1[a,v] += -0.50000000 * np.einsum('uvab,wcab,wv->uc', T2[ha,ha,pv,pv], V[a,v,v,v], gamma1, optimize='optimal')
	C1[c,a] += -0.50000000 * np.einsum('ijuv,jwxy,vwxy->iu', T2[hc,hc,pa,pa], V[c,a,a,a], lambda2, optimize='optimal')
	C1[c,a] += +0.50000000 * np.einsum('iuvw,xyzr,yu,wxzr->iv', T2[hc,ha,pa,pa], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[c,a] += -0.50000000 * np.einsum('iuvw,xyzr,wr,xyuz->iv', T2[hc,ha,pa,pa], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[c,a] += +0.50000000 * np.einsum('iuvw,xyzr,yu,wxzr->iv', T2[hc,ha,pa,pa], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,a] += +0.50000000 * np.einsum('iuvw,xyzr,wz,xyur->iv', T2[hc,ha,pa,pa], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,a] += -0.50000000 * np.einsum('ijuv,ijkw,vw->ku', T2[hc,hc,pa,pa], V[c,c,c,a], eta1, optimize='optimal')
	C1[c,a] += -1.00000000 * np.einsum('iuvw,ixjy,wy,xu->jv', T2[hc,ha,pa,pa], V[c,a,c,a], eta1, gamma1, optimize='optimal')
	C1[c,a] += -1.00000000 * np.einsum('iuvw,ixjy,wxuy->jv', T2[hc,ha,pa,pa], V[c,a,c,a], lambda2, optimize='optimal')
	C1[c,a] += -0.50000000 * np.einsum('iuva,wxya,wxuy->iv', T2[hc,ha,pa,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C1[c,a] += -0.50000000 * np.einsum('ijua,ijka->ku', T2[hc,hc,pa,pv], V[c,c,c,v], optimize='optimal')
	C1[c,a] += -1.00000000 * np.einsum('iuva,iwja,wu->jv', T2[hc,ha,pa,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C1[c,a] += -0.50000000 * np.einsum('uvwa,xyia,yv,xu->iw', T2[ha,ha,pa,pv], V[a,a,c,v], gamma1, gamma1, optimize='optimal')
	C1[c,a] += -0.25000000 * np.einsum('uvwa,xyia,xyuv->iw', T2[ha,ha,pa,pv], V[a,a,c,v], lambda2, optimize='optimal')
	C1[c,a] += -0.50000000 * np.einsum('ijuv,jwxy,vy,ux->iw', T2[hc,hc,pa,pa], V[c,a,a,a], eta1, eta1, optimize='optimal')
	C1[c,a] += -0.25000000 * np.einsum('ijuv,jwxy,uvxy->iw', T2[hc,hc,pa,pa], V[c,a,a,a], lambda2, optimize='optimal')
	C1[c,a] += +0.50000000 * np.einsum('iuvw,xyzr,yu,wr,vz->ix', T2[hc,ha,pa,pa], V[a,a,a,a], eta1, gamma1, gamma1, optimize='optimal')
	C1[c,a] += +0.25000000 * np.einsum('iuvw,xyzr,yu,vwzr->ix', T2[hc,ha,pa,pa], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[c,a] += +0.50000000 * np.einsum('iuvw,xyzr,wr,vz,yu->ix', T2[hc,ha,pa,pa], V[a,a,a,a], eta1, eta1, gamma1, optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('iuvw,xyzr,wr,vyuz->ix', T2[hc,ha,pa,pa], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[c,a] += +0.25000000 * np.einsum('iuvw,xyzr,yu,vwzr->ix', T2[hc,ha,pa,pa], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('iuvw,xyzr,wr,vyuz->ix', T2[hc,ha,pa,pa], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,a] += -0.50000000 * np.einsum('iuvw,ixjy,vwuy->jx', T2[hc,ha,pa,pa], V[c,a,c,a], lambda2, optimize='optimal')
	C1[c,a] += -1.00000000 * np.einsum('ijua,jvwa,uw->iv', T2[hc,hc,pa,pv], V[c,a,a,v], eta1, optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('iuva,wxya,vy,xu->iw', T2[hc,ha,pa,pv], V[a,a,a,v], eta1, gamma1, optimize='optimal')
	C1[c,a] += +1.00000000 * np.einsum('iuva,wxya,vxuy->iw', T2[hc,ha,pa,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C1[c,a] += +0.50000000 * np.einsum('uvwa,xyia,wyuv->ix', T2[ha,ha,pa,pv], V[a,a,c,v], lambda2, optimize='optimal')
	C1[c,a] += -0.50000000 * np.einsum('ijab,juab->iu', T2[hc,hc,pv,pv], V[c,a,v,v], optimize='optimal')
	C1[c,a] += +0.50000000 * np.einsum('iuab,vwab,wu->iv', T2[hc,ha,pv,pv], V[a,a,v,v], gamma1, optimize='optimal')
	C1[c,c] += +0.50000000 * np.einsum('ijuv,kjwx,vx,uw->ik', T2[hc,hc,pa,pa], V[c,c,a,a], eta1, eta1, optimize='optimal')
	C1[c,c] += +0.25000000 * np.einsum('ijuv,kjwx,uvwx->ik', T2[hc,hc,pa,pa], V[c,c,a,a], lambda2, optimize='optimal')
	C1[c,c] += +0.50000000 * np.einsum('iuvw,jxyz,xu,wz,vy->ij', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, gamma1, gamma1, optimize='optimal')
	C1[c,c] += +0.25000000 * np.einsum('iuvw,jxyz,xu,vwyz->ij', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, lambda2, optimize='optimal')
	C1[c,c] += +0.50000000 * np.einsum('iuvw,jxyz,wz,vy,xu->ij', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, eta1, gamma1, optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('iuvw,jxyz,wz,vxuy->ij', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, lambda2, optimize='optimal')
	C1[c,c] += +0.25000000 * np.einsum('iuvw,jxyz,xu,vwyz->ij', T2[hc,ha,pa,pa], V[c,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('iuvw,jxyz,wz,vxuy->ij', T2[hc,ha,pa,pa], V[c,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,c] += +0.50000000 * np.einsum('iuvw,jikx,vwux->kj', T2[hc,ha,pa,pa], V[c,c,c,a], lambda2, optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('ijua,kjva,uv->ik', T2[hc,hc,pa,pv], V[c,c,a,v], eta1, optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('iuva,jwxa,vx,wu->ij', T2[hc,ha,pa,pv], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C1[c,c] += +1.00000000 * np.einsum('iuva,jwxa,vwux->ij', T2[hc,ha,pa,pv], V[c,a,a,v], lambda2, optimize='optimal')
	C1[c,c] += +0.50000000 * np.einsum('uvwa,ixja,wxuv->ji', T2[ha,ha,pa,pv], V[c,a,c,v], lambda2, optimize='optimal')
	C1[c,c] += +0.50000000 * np.einsum('ijab,kjab->ik', T2[hc,hc,pv,pv], V[c,c,v,v], optimize='optimal')
	C1[c,c] += +0.50000000 * np.einsum('iuab,jvab,vu->ij', T2[hc,ha,pv,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('ijuv,jawx,vx,uw->ia', T2[hc,hc,pa,pa], V[c,v,a,a], eta1, eta1, optimize='optimal')
	C1[c,v] += -0.25000000 * np.einsum('ijuv,jawx,uvwx->ia', T2[hc,hc,pa,pa], V[c,v,a,a], lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('iuvw,xayz,xu,wz,vy->ia', T2[hc,ha,pa,pa], V[a,v,a,a], eta1, gamma1, gamma1, optimize='optimal')
	C1[c,v] += -0.25000000 * np.einsum('iuvw,xayz,xu,vwyz->ia', T2[hc,ha,pa,pa], V[a,v,a,a], eta1, lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('iuvw,xayz,wz,vy,xu->ia', T2[hc,ha,pa,pa], V[a,v,a,a], eta1, eta1, gamma1, optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('iuvw,xayz,wz,vxuy->ia', T2[hc,ha,pa,pa], V[a,v,a,a], eta1, lambda2, optimize='optimal')
	C1[c,v] += -0.25000000 * np.einsum('iuvw,xayz,xu,vwyz->ia', T2[hc,ha,pa,pa], V[a,v,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('iuvw,xayz,wz,vxuy->ia', T2[hc,ha,pa,pa], V[a,v,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('iuvw,iajx,vwux->ja', T2[hc,ha,pa,pa], V[c,v,c,a], lambda2, optimize='optimal')
	C1[c,v] += +0.50000000 * np.einsum('ijua,jvwx,uvwx->ia', T2[hc,hc,pa,pv], V[c,a,a,a], lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('iuva,wxyz,xu,vwyz->ia', T2[hc,ha,pa,pv], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[c,v] += +0.50000000 * np.einsum('iuva,wxyz,vz,wxuy->ia', T2[hc,ha,pa,pv], V[a,a,a,a], eta1, lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('iuva,wxyz,xu,vwyz->ia', T2[hc,ha,pa,pv], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('iuva,wxyz,vy,wxuz->ia', T2[hc,ha,pa,pv], V[a,a,a,a], gamma1, lambda2, optimize='optimal')
	C1[c,v] += +0.50000000 * np.einsum('ijua,ijkv,uv->ka', T2[hc,hc,pa,pv], V[c,c,c,a], eta1, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('iuva,iwjx,vx,wu->ja', T2[hc,ha,pa,pv], V[c,a,c,a], eta1, gamma1, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('iuva,iwjx,vwux->ja', T2[hc,ha,pa,pv], V[c,a,c,a], lambda2, optimize='optimal')
	C1[c,v] += +0.50000000 * np.einsum('uvwa,xyiz,yv,xu,wz->ia', T2[ha,ha,pa,pv], V[a,a,c,a], eta1, eta1, gamma1, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('uvwa,xyiz,yv,wxuz->ia', T2[ha,ha,pa,pv], V[a,a,c,a], eta1, lambda2, optimize='optimal')
	C1[c,v] += +0.50000000 * np.einsum('uvwa,xyiz,wz,yv,xu->ia', T2[ha,ha,pa,pv], V[a,a,c,a], eta1, gamma1, gamma1, optimize='optimal')
	C1[c,v] += +0.25000000 * np.einsum('uvwa,xyiz,wz,xyuv->ia', T2[ha,ha,pa,pv], V[a,a,c,a], eta1, lambda2, optimize='optimal')
	C1[c,v] += +1.00000000 * np.einsum('uvwa,xyiz,yv,wxuz->ia', T2[ha,ha,pa,pv], V[a,a,c,a], gamma1, lambda2, optimize='optimal')
	C1[c,v] += +0.25000000 * np.einsum('uvwa,xyiz,wz,xyuv->ia', T2[ha,ha,pa,pv], V[a,a,c,a], gamma1, lambda2, optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('ijua,jbva,uv->ib', T2[hc,hc,pa,pv], V[c,v,a,v], eta1, optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('iuva,wbxa,vx,wu->ib', T2[hc,ha,pa,pv], V[a,v,a,v], eta1, gamma1, optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('iuva,wbxa,vwux->ib', T2[hc,ha,pa,pv], V[a,v,a,v], lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('uvwa,xbia,wxuv->ib', T2[ha,ha,pa,pv], V[a,v,c,v], lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('iuab,vwxb,vwux->ia', T2[hc,ha,pv,pv], V[a,a,a,v], lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('ijab,ijkb->ka', T2[hc,hc,pv,pv], V[c,c,c,v], optimize='optimal')
	C1[c,v] += -1.00000000 * np.einsum('iuab,ivjb,vu->ja', T2[hc,ha,pv,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('uvab,wxib,xv,wu->ia', T2[ha,ha,pv,pv], V[a,a,c,v], gamma1, gamma1, optimize='optimal')
	C1[c,v] += -0.25000000 * np.einsum('uvab,wxib,wxuv->ia', T2[ha,ha,pv,pv], V[a,a,c,v], lambda2, optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('ijab,jcab->ic', T2[hc,hc,pv,pv], V[c,v,v,v], optimize='optimal')
	C1[c,v] += -0.50000000 * np.einsum('iuab,vcab,vu->ic', T2[hc,ha,pv,pv], V[a,v,v,v], gamma1, optimize='optimal')
	C1[v,a] += +0.50000000 * np.einsum('ijuv,ijwa,vw->au', T2[hc,hc,pa,pa], V[c,c,a,v], eta1, optimize='optimal')
	C1[v,a] += +1.00000000 * np.einsum('iuvw,ixya,wy,xu->av', T2[hc,ha,pa,pa], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C1[v,a] += +1.00000000 * np.einsum('iuvw,ixya,wxuy->av', T2[hc,ha,pa,pa], V[c,a,a,v], lambda2, optimize='optimal')
	C1[v,a] += -0.50000000 * np.einsum('ijua,ijba->bu', T2[hc,hc,pa,pv], V[c,c,v,v], optimize='optimal')
	C1[v,a] += -1.00000000 * np.einsum('iuva,iwba,wu->bv', T2[hc,ha,pa,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C1[v,a] += -0.50000000 * np.einsum('uvwa,xyba,yv,xu->bw', T2[ha,ha,pa,pv], V[a,a,v,v], gamma1, gamma1, optimize='optimal')
	C1[v,a] += -0.25000000 * np.einsum('uvwa,xyba,xyuv->bw', T2[ha,ha,pa,pv], V[a,a,v,v], lambda2, optimize='optimal')
	C1[v,a] += +0.50000000 * np.einsum('iuvw,ixya,vwuy->ax', T2[hc,ha,pa,pa], V[c,a,a,v], lambda2, optimize='optimal')
	C1[v,a] += +0.50000000 * np.einsum('uvwa,xyba,wyuv->bx', T2[ha,ha,pa,pv], V[a,a,v,v], lambda2, optimize='optimal')
	C1[v,c] += -0.50000000 * np.einsum('iuvw,jixa,vwux->aj', T2[hc,ha,pa,pa], V[c,c,a,v], lambda2, optimize='optimal')
	C1[v,c] += +0.50000000 * np.einsum('uvwa,ixba,wxuv->bi', T2[ha,ha,pa,pv], V[c,a,v,v], lambda2, optimize='optimal')
	C1[v,v] += +0.50000000 * np.einsum('iuvw,iaxb,vwux->ba', T2[hc,ha,pa,pa], V[c,v,a,v], lambda2, optimize='optimal')
	C1[v,v] += -0.50000000 * np.einsum('ijua,ijvb,uv->ba', T2[hc,hc,pa,pv], V[c,c,a,v], eta1, optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('iuva,iwxb,vx,wu->ba', T2[hc,ha,pa,pv], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('iuva,iwxb,vwux->ba', T2[hc,ha,pa,pv], V[c,a,a,v], lambda2, optimize='optimal')
	C1[v,v] += -0.50000000 * np.einsum('uvwa,xyzb,yv,xu,wz->ba', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, eta1, gamma1, optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('uvwa,xyzb,yv,wxuz->ba', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, lambda2, optimize='optimal')
	C1[v,v] += -0.50000000 * np.einsum('uvwa,xyzb,wz,yv,xu->ba', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, gamma1, gamma1, optimize='optimal')
	C1[v,v] += -0.25000000 * np.einsum('uvwa,xyzb,wz,xyuv->ba', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, lambda2, optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('uvwa,xyzb,yv,wxuz->ba', T2[ha,ha,pa,pv], V[a,a,a,v], gamma1, lambda2, optimize='optimal')
	C1[v,v] += -0.25000000 * np.einsum('uvwa,xyzb,wz,xyuv->ba', T2[ha,ha,pa,pv], V[a,a,a,v], gamma1, lambda2, optimize='optimal')
	C1[v,v] += -0.50000000 * np.einsum('uvwa,xbca,wxuv->cb', T2[ha,ha,pa,pv], V[a,v,v,v], lambda2, optimize='optimal')
	C1[v,v] += -0.50000000 * np.einsum('ijab,ijcb->ca', T2[hc,hc,pv,pv], V[c,c,v,v], optimize='optimal')
	C1[v,v] += -1.00000000 * np.einsum('iuab,ivcb,vu->ca', T2[hc,ha,pv,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C1[v,v] += -0.50000000 * np.einsum('uvab,wxcb,xv,wu->ca', T2[ha,ha,pv,pv], V[a,a,v,v], gamma1, gamma1, optimize='optimal')
	C1[v,v] += -0.25000000 * np.einsum('uvab,wxcb,wxuv->ca', T2[ha,ha,pv,pv], V[a,a,v,v], lambda2, optimize='optimal')

	t1 = time.time()
	if verbose: print("H2_T2_C1 took {:.4f} seconds to run.".format(t1-t0))

def H1_T2_C2(C1, C2, F, V, T1, T2, gamma1, eta1, lambda2, lambda3, mf, verbose=False):
	# 96 lines
	t0 = time.time()
	hc = mf.hc
	ha = mf.ha
	pa = mf.pa
	pv = mf.pv
	c = mf.core
	a = mf.active
	v = mf.virt

	C2[a,a,a,a] += -0.50000000 * np.einsum('iu,ivwx->uvwx', F[c,a], T2[hc,ha,pa,pa], optimize='optimal')
	C2[a,a,a,a] += -0.50000000 * np.einsum('ua,vwxa->vwux', F[a,v], T2[ha,ha,pa,pv], optimize='optimal')
	C2[a,a,c,a] += -0.50000000 * np.einsum('ia,uvwa->uviw', F[c,v], T2[ha,ha,pa,pv], optimize='optimal')
	C2[a,a,a,v] += -1.00000000 * np.einsum('iu,ivwa->uvwa', F[c,a], T2[hc,ha,pa,pv], optimize='optimal')
	C2[a,a,a,v] += +0.50000000 * np.einsum('uv,wxya,yv->wxua', F[a,a], T2[ha,ha,pa,pv], eta1, optimize='optimal')
	C2[a,a,a,v] += +0.50000000 * np.einsum('uv,wxya,yv->wxua', F[a,a], T2[ha,ha,pa,pv], gamma1, optimize='optimal')
	C2[a,a,a,v] += -0.50000000 * np.einsum('ua,vwba->vwub', F[a,v], T2[ha,ha,pv,pv], optimize='optimal')
	C2[a,a,a,v] += +1.00000000 * np.einsum('uv,wxya,ux->vwya', F[a,a], T2[ha,ha,pa,pv], eta1, optimize='optimal')
	C2[a,a,a,v] += +1.00000000 * np.einsum('uv,wxya,ux->vwya', F[a,a], T2[ha,ha,pa,pv], gamma1, optimize='optimal')
	C2[a,a,a,v] += +0.50000000 * np.einsum('ab,uvwb->uvwa', F[v,v], T2[ha,ha,pa,pv], optimize='optimal')
	C2[a,a,c,v] += +0.50000000 * np.einsum('iu,vwxa,xu->vwia', F[c,a], T2[ha,ha,pa,pv], eta1, optimize='optimal')
	C2[a,a,c,v] += +0.50000000 * np.einsum('iu,vwxa,xu->vwia', F[c,a], T2[ha,ha,pa,pv], gamma1, optimize='optimal')
	C2[a,a,c,v] += -0.50000000 * np.einsum('ia,uvba->uvib', F[c,v], T2[ha,ha,pv,pv], optimize='optimal')
	C2[a,a,v,v] += -0.50000000 * np.einsum('iu,ivab->uvab', F[c,a], T2[hc,ha,pv,pv], optimize='optimal')
	C2[a,a,v,v] += +0.50000000 * np.einsum('uv,wxab,ux->vwab', F[a,a], T2[ha,ha,pv,pv], eta1, optimize='optimal')
	C2[a,a,v,v] += +0.50000000 * np.einsum('uv,wxab,ux->vwab', F[a,a], T2[ha,ha,pv,pv], gamma1, optimize='optimal')
	C2[a,a,v,v] += +0.50000000 * np.einsum('au,vwxb,xu->vwab', F[v,a], T2[ha,ha,pa,pv], eta1, optimize='optimal')
	C2[a,a,v,v] += +0.50000000 * np.einsum('au,vwxb,xu->vwab', F[v,a], T2[ha,ha,pa,pv], gamma1, optimize='optimal')
	C2[a,a,v,v] += -0.50000000 * np.einsum('ab,uvcb->uvac', F[v,v], T2[ha,ha,pv,pv], optimize='optimal')
	C2[a,v,a,a] += +0.50000000 * np.einsum('ia,iuvw->uavw', F[c,v], T2[hc,ha,pa,pa], optimize='optimal')
	C2[a,v,a,v] += +1.00000000 * np.einsum('ia,iuvb->uavb', F[c,v], T2[hc,ha,pa,pv], optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('ua,vwxb,uw->vaxb', F[a,v], T2[ha,ha,pa,pv], eta1, optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('ua,vwxb,uw->vaxb', F[a,v], T2[ha,ha,pa,pv], gamma1, optimize='optimal')
	C2[a,v,v,v] += +0.50000000 * np.einsum('ia,iubc->uabc', F[c,v], T2[hc,ha,pv,pv], optimize='optimal')
	C2[a,v,v,v] += -0.50000000 * np.einsum('ua,vwbc,uw->vabc', F[a,v], T2[ha,ha,pv,pv], eta1, optimize='optimal')
	C2[a,v,v,v] += -0.50000000 * np.einsum('ua,vwbc,uw->vabc', F[a,v], T2[ha,ha,pv,pv], gamma1, optimize='optimal')
	C2[c,a,a,a] += -0.50000000 * np.einsum('ij,iuvw->juvw', F[c,c], T2[hc,ha,pa,pa], optimize='optimal')
	C2[c,a,a,a] += -0.50000000 * np.einsum('iu,jivw->juvw', F[c,a], T2[hc,hc,pa,pa], optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('uv,iwxy,yv->iwux', F[a,a], T2[hc,ha,pa,pa], eta1, optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('uv,iwxy,yv->iwux', F[a,a], T2[hc,ha,pa,pa], gamma1, optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('ua,ivwa->ivuw', F[a,v], T2[hc,ha,pa,pv], optimize='optimal')
	C2[c,a,a,a] += -0.50000000 * np.einsum('uv,iwxy,uw->ivxy', F[a,a], T2[hc,ha,pa,pa], eta1, optimize='optimal')
	C2[c,a,a,a] += -0.50000000 * np.einsum('uv,iwxy,uw->ivxy', F[a,a], T2[hc,ha,pa,pa], gamma1, optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('iu,jvwx,xu->jviw', F[c,a], T2[hc,ha,pa,pa], eta1, optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('iu,jvwx,xu->jviw', F[c,a], T2[hc,ha,pa,pa], gamma1, optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('ia,juva->juiv', F[c,v], T2[hc,ha,pa,pv], optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('ij,iuva->juva', F[c,c], T2[hc,ha,pa,pv], optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iu,jiva->juva', F[c,a], T2[hc,hc,pa,pv], optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('uv,iwxa,xv->iwua', F[a,a], T2[hc,ha,pa,pv], eta1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('uv,iwxa,xv->iwua', F[a,a], T2[hc,ha,pa,pv], gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('ua,ivba->ivub', F[a,v], T2[hc,ha,pv,pv], optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('ui,vwxa,uw->ivxa', F[a,c], T2[ha,ha,pa,pv], eta1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('ui,vwxa,uw->ivxa', F[a,c], T2[ha,ha,pa,pv], gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('uv,iwxa,uw->ivxa', F[a,a], T2[hc,ha,pa,pv], eta1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('uv,iwxa,uw->ivxa', F[a,a], T2[hc,ha,pa,pv], gamma1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('au,ivwx,xu->ivwa', F[v,a], T2[hc,ha,pa,pa], eta1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('au,ivwx,xu->ivwa', F[v,a], T2[hc,ha,pa,pa], gamma1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('ab,iuvb->iuva', F[v,v], T2[hc,ha,pa,pv], optimize='optimal')
	C2[c,a,c,v] += +1.00000000 * np.einsum('iu,jvwa,wu->jvia', F[c,a], T2[hc,ha,pa,pv], eta1, optimize='optimal')
	C2[c,a,c,v] += +1.00000000 * np.einsum('iu,jvwa,wu->jvia', F[c,a], T2[hc,ha,pa,pv], gamma1, optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('ia,juba->juib', F[c,v], T2[hc,ha,pv,pv], optimize='optimal')
	C2[c,a,v,v] += -0.50000000 * np.einsum('ij,iuab->juab', F[c,c], T2[hc,ha,pv,pv], optimize='optimal')
	C2[c,a,v,v] += -0.50000000 * np.einsum('iu,jiab->juab', F[c,a], T2[hc,hc,pv,pv], optimize='optimal')
	C2[c,a,v,v] += +0.50000000 * np.einsum('ui,vwab,uw->ivab', F[a,c], T2[ha,ha,pv,pv], eta1, optimize='optimal')
	C2[c,a,v,v] += +0.50000000 * np.einsum('ui,vwab,uw->ivab', F[a,c], T2[ha,ha,pv,pv], gamma1, optimize='optimal')
	C2[c,a,v,v] += -0.50000000 * np.einsum('uv,iwab,uw->ivab', F[a,a], T2[hc,ha,pv,pv], eta1, optimize='optimal')
	C2[c,a,v,v] += -0.50000000 * np.einsum('uv,iwab,uw->ivab', F[a,a], T2[hc,ha,pv,pv], gamma1, optimize='optimal')
	C2[c,a,v,v] += +1.00000000 * np.einsum('au,ivwb,wu->ivab', F[v,a], T2[hc,ha,pa,pv], eta1, optimize='optimal')
	C2[c,a,v,v] += +1.00000000 * np.einsum('au,ivwb,wu->ivab', F[v,a], T2[hc,ha,pa,pv], gamma1, optimize='optimal')
	C2[c,a,v,v] += -1.00000000 * np.einsum('ab,iucb->iuac', F[v,v], T2[hc,ha,pv,pv], optimize='optimal')
	C2[c,c,a,a] += +0.50000000 * np.einsum('ij,kiuv->jkuv', F[c,c], T2[hc,hc,pa,pa], optimize='optimal')
	C2[c,c,a,a] += -0.50000000 * np.einsum('uv,ijwx,xv->ijuw', F[a,a], T2[hc,hc,pa,pa], eta1, optimize='optimal')
	C2[c,c,a,a] += -0.50000000 * np.einsum('uv,ijwx,xv->ijuw', F[a,a], T2[hc,hc,pa,pa], gamma1, optimize='optimal')
	C2[c,c,a,a] += -0.50000000 * np.einsum('ua,ijva->ijuv', F[a,v], T2[hc,hc,pa,pv], optimize='optimal')
	C2[c,c,a,a] += +0.50000000 * np.einsum('ui,jvwx,uv->ijwx', F[a,c], T2[hc,ha,pa,pa], eta1, optimize='optimal')
	C2[c,c,a,a] += +0.50000000 * np.einsum('ui,jvwx,uv->ijwx', F[a,c], T2[hc,ha,pa,pa], gamma1, optimize='optimal')
	C2[c,c,c,a] += -0.50000000 * np.einsum('iu,jkvw,wu->jkiv', F[c,a], T2[hc,hc,pa,pa], eta1, optimize='optimal')
	C2[c,c,c,a] += -0.50000000 * np.einsum('iu,jkvw,wu->jkiv', F[c,a], T2[hc,hc,pa,pa], gamma1, optimize='optimal')
	C2[c,c,c,a] += -0.50000000 * np.einsum('ia,jkua->jkiu', F[c,v], T2[hc,hc,pa,pv], optimize='optimal')
	C2[c,c,a,v] += +1.00000000 * np.einsum('ij,kiua->jkua', F[c,c], T2[hc,hc,pa,pv], optimize='optimal')
	C2[c,c,a,v] += +0.50000000 * np.einsum('uv,ijwa,wv->ijua', F[a,a], T2[hc,hc,pa,pv], eta1, optimize='optimal')
	C2[c,c,a,v] += +0.50000000 * np.einsum('uv,ijwa,wv->ijua', F[a,a], T2[hc,hc,pa,pv], gamma1, optimize='optimal')
	C2[c,c,a,v] += -0.50000000 * np.einsum('ua,ijba->ijub', F[a,v], T2[hc,hc,pv,pv], optimize='optimal')
	C2[c,c,a,v] += +1.00000000 * np.einsum('ui,jvwa,uv->ijwa', F[a,c], T2[hc,ha,pa,pv], eta1, optimize='optimal')
	C2[c,c,a,v] += +1.00000000 * np.einsum('ui,jvwa,uv->ijwa', F[a,c], T2[hc,ha,pa,pv], gamma1, optimize='optimal')
	C2[c,c,a,v] += +0.50000000 * np.einsum('au,ijvw,wu->ijva', F[v,a], T2[hc,hc,pa,pa], eta1, optimize='optimal')
	C2[c,c,a,v] += +0.50000000 * np.einsum('au,ijvw,wu->ijva', F[v,a], T2[hc,hc,pa,pa], gamma1, optimize='optimal')
	C2[c,c,a,v] += +0.50000000 * np.einsum('ab,ijub->ijua', F[v,v], T2[hc,hc,pa,pv], optimize='optimal')
	C2[c,c,c,v] += +0.50000000 * np.einsum('iu,jkva,vu->jkia', F[c,a], T2[hc,hc,pa,pv], eta1, optimize='optimal')
	C2[c,c,c,v] += +0.50000000 * np.einsum('iu,jkva,vu->jkia', F[c,a], T2[hc,hc,pa,pv], gamma1, optimize='optimal')
	C2[c,c,c,v] += -0.50000000 * np.einsum('ia,jkba->jkib', F[c,v], T2[hc,hc,pv,pv], optimize='optimal')
	C2[c,c,v,v] += +0.50000000 * np.einsum('ij,kiab->jkab', F[c,c], T2[hc,hc,pv,pv], optimize='optimal')
	C2[c,c,v,v] += +0.50000000 * np.einsum('ui,jvab,uv->ijab', F[a,c], T2[hc,ha,pv,pv], eta1, optimize='optimal')
	C2[c,c,v,v] += +0.50000000 * np.einsum('ui,jvab,uv->ijab', F[a,c], T2[hc,ha,pv,pv], gamma1, optimize='optimal')
	C2[c,c,v,v] += +0.50000000 * np.einsum('au,ijvb,vu->ijab', F[v,a], T2[hc,hc,pa,pv], eta1, optimize='optimal')
	C2[c,c,v,v] += +0.50000000 * np.einsum('au,ijvb,vu->ijab', F[v,a], T2[hc,hc,pa,pv], gamma1, optimize='optimal')
	C2[c,c,v,v] += -0.50000000 * np.einsum('ab,ijcb->ijac', F[v,v], T2[hc,hc,pv,pv], optimize='optimal')
	C2[c,v,a,a] += -0.50000000 * np.einsum('ia,jiuv->jauv', F[c,v], T2[hc,hc,pa,pa], optimize='optimal')
	C2[c,v,a,a] += -0.50000000 * np.einsum('ua,ivwx,uv->iawx', F[a,v], T2[hc,ha,pa,pa], eta1, optimize='optimal')
	C2[c,v,a,a] += -0.50000000 * np.einsum('ua,ivwx,uv->iawx', F[a,v], T2[hc,ha,pa,pa], gamma1, optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('ia,jiub->jaub', F[c,v], T2[hc,hc,pa,pv], optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('ua,ivwb,uv->iawb', F[a,v], T2[hc,ha,pa,pv], eta1, optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('ua,ivwb,uv->iawb', F[a,v], T2[hc,ha,pa,pv], gamma1, optimize='optimal')
	C2[c,v,v,v] += -0.50000000 * np.einsum('ia,jibc->jabc', F[c,v], T2[hc,hc,pv,pv], optimize='optimal')
	C2[c,v,v,v] += -0.50000000 * np.einsum('ua,ivbc,uv->iabc', F[a,v], T2[hc,ha,pv,pv], eta1, optimize='optimal')
	C2[c,v,v,v] += -0.50000000 * np.einsum('ua,ivbc,uv->iabc', F[a,v], T2[hc,ha,pv,pv], gamma1, optimize='optimal')

	t1 = time.time()
	if verbose: print("H1_T2_C2 took {:.4f} seconds to run.".format(t1-t0))

def H2_T1_C2(C1, C2, F, V, T1, T2, gamma1, eta1, lambda2, lambda3, mf, verbose=False):
	# 144 lines
	t0 = time.time()
	hc = mf.hc
	ha = mf.ha
	pa = mf.pa
	pv = mf.pv
	c = mf.core
	a = mf.active
	v = mf.virt

	C2[a,a,a,a] += -0.50000000 * np.einsum('iu,ivwx->wxuv', T1[hc,pa], V[c,a,a,a], optimize='optimal')
	C2[a,a,a,a] += -0.50000000 * np.einsum('ua,vwxa->uxvw', T1[ha,pv], V[a,a,a,v], optimize='optimal')
	C2[a,a,c,a] += -0.50000000 * np.einsum('iu,jivw->vwju', T1[hc,pa], V[c,c,a,a], optimize='optimal')
	C2[a,a,c,a] += -1.00000000 * np.einsum('ua,ivwa->uwiv', T1[ha,pv], V[c,a,a,v], optimize='optimal')
	C2[a,a,c,c] += -0.50000000 * np.einsum('ua,ijva->uvij', T1[ha,pv], V[c,c,a,v], optimize='optimal')
	C2[a,a,a,v] += -0.50000000 * np.einsum('iu,iavw->vwua', T1[hc,pa], V[c,v,a,a], optimize='optimal')
	C2[a,a,a,v] += +0.50000000 * np.einsum('ia,iuvw->vwua', T1[hc,pv], V[c,a,a,a], optimize='optimal')
	C2[a,a,a,v] += -0.50000000 * np.einsum('ua,vwxy,wu->xyva', T1[ha,pv], V[a,a,a,a], eta1, optimize='optimal')
	C2[a,a,a,v] += -0.50000000 * np.einsum('ua,vwxy,wu->xyva', T1[ha,pv], V[a,a,a,a], gamma1, optimize='optimal')
	C2[a,a,a,v] += -1.00000000 * np.einsum('ua,vbwa->uwvb', T1[ha,pv], V[a,v,a,v], optimize='optimal')
	C2[a,a,c,v] += -0.50000000 * np.einsum('ia,jiuv->uvja', T1[hc,pv], V[c,c,a,a], optimize='optimal')
	C2[a,a,c,v] += -0.50000000 * np.einsum('ua,ivwx,vu->wxia', T1[ha,pv], V[c,a,a,a], eta1, optimize='optimal')
	C2[a,a,c,v] += -0.50000000 * np.einsum('ua,ivwx,vu->wxia', T1[ha,pv], V[c,a,a,a], gamma1, optimize='optimal')
	C2[a,a,c,v] += -1.00000000 * np.einsum('ua,ibva->uvib', T1[ha,pv], V[c,v,a,v], optimize='optimal')
	C2[a,a,v,v] += -0.50000000 * np.einsum('ia,ibuv->uvab', T1[hc,pv], V[c,v,a,a], optimize='optimal')
	C2[a,a,v,v] += -0.50000000 * np.einsum('ua,vbwx,vu->wxab', T1[ha,pv], V[a,v,a,a], eta1, optimize='optimal')
	C2[a,a,v,v] += -0.50000000 * np.einsum('ua,vbwx,vu->wxab', T1[ha,pv], V[a,v,a,a], gamma1, optimize='optimal')
	C2[a,a,v,v] += -0.50000000 * np.einsum('ua,bcva->uvbc', T1[ha,pv], V[v,v,a,v], optimize='optimal')
	C2[a,v,a,a] += -1.00000000 * np.einsum('iu,ivwa->wauv', T1[hc,pa], V[c,a,a,v], optimize='optimal')
	C2[a,v,a,a] += -0.50000000 * np.einsum('ua,vwba->ubvw', T1[ha,pv], V[a,a,v,v], optimize='optimal')
	C2[a,v,c,a] += -1.00000000 * np.einsum('iu,jiva->vaju', T1[hc,pa], V[c,c,a,v], optimize='optimal')
	C2[a,v,c,a] += -1.00000000 * np.einsum('ua,ivba->ubiv', T1[ha,pv], V[c,a,v,v], optimize='optimal')
	C2[a,v,c,c] += -0.50000000 * np.einsum('ua,ijba->ubij', T1[ha,pv], V[c,c,v,v], optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('iu,iavb->vbua', T1[hc,pa], V[c,v,a,v], optimize='optimal')
	C2[a,v,a,v] += +1.00000000 * np.einsum('ia,iuvb->vbua', T1[hc,pv], V[c,a,a,v], optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('ua,vwxb,wu->xbva', T1[ha,pv], V[a,a,a,v], eta1, optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('ua,vwxb,wu->xbva', T1[ha,pv], V[a,a,a,v], gamma1, optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('ua,vbca->ucvb', T1[ha,pv], V[a,v,v,v], optimize='optimal')
	C2[a,v,c,v] += -1.00000000 * np.einsum('ia,jiub->ubja', T1[hc,pv], V[c,c,a,v], optimize='optimal')
	C2[a,v,c,v] += -1.00000000 * np.einsum('ua,ivwb,vu->wbia', T1[ha,pv], V[c,a,a,v], eta1, optimize='optimal')
	C2[a,v,c,v] += -1.00000000 * np.einsum('ua,ivwb,vu->wbia', T1[ha,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C2[a,v,c,v] += -1.00000000 * np.einsum('ua,ibca->ucib', T1[ha,pv], V[c,v,v,v], optimize='optimal')
	C2[a,v,v,v] += -1.00000000 * np.einsum('ia,ibuc->ucab', T1[hc,pv], V[c,v,a,v], optimize='optimal')
	C2[a,v,v,v] += -1.00000000 * np.einsum('ua,vbwc,vu->wcab', T1[ha,pv], V[a,v,a,v], eta1, optimize='optimal')
	C2[a,v,v,v] += -1.00000000 * np.einsum('ua,vbwc,vu->wcab', T1[ha,pv], V[a,v,a,v], gamma1, optimize='optimal')
	C2[a,v,v,v] += -0.50000000 * np.einsum('ua,bcda->udbc', T1[ha,pv], V[v,v,v,v], optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('iu,ivjw->jwuv', T1[hc,pa], V[c,a,c,a], optimize='optimal')
	C2[c,a,a,a] += -0.50000000 * np.einsum('iu,vwxy,uy->ixvw', T1[hc,pa], V[a,a,a,a], eta1, optimize='optimal')
	C2[c,a,a,a] += -0.50000000 * np.einsum('iu,vwxy,uy->ixvw', T1[hc,pa], V[a,a,a,a], gamma1, optimize='optimal')
	C2[c,a,a,a] += -0.50000000 * np.einsum('ia,uvwa->iwuv', T1[hc,pv], V[a,a,a,v], optimize='optimal')
	C2[c,a,a,a] += +0.50000000 * np.einsum('ua,vwia->iuvw', T1[ha,pv], V[a,a,c,v], optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('iu,jikv->kvju', T1[hc,pa], V[c,c,c,a], optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('iu,jvwx,ux->iwjv', T1[hc,pa], V[c,a,a,a], eta1, optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('iu,jvwx,ux->iwjv', T1[hc,pa], V[c,a,a,a], gamma1, optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('ia,juva->ivju', T1[hc,pv], V[c,a,a,v], optimize='optimal')
	C2[c,a,c,a] += +1.00000000 * np.einsum('ua,ivja->juiv', T1[ha,pv], V[c,a,c,v], optimize='optimal')
	C2[c,a,c,c] += -0.50000000 * np.einsum('iu,jkvw,uw->ivjk', T1[hc,pa], V[c,c,a,a], eta1, optimize='optimal')
	C2[c,a,c,c] += -0.50000000 * np.einsum('iu,jkvw,uw->ivjk', T1[hc,pa], V[c,c,a,a], gamma1, optimize='optimal')
	C2[c,a,c,c] += -0.50000000 * np.einsum('ia,jkua->iujk', T1[hc,pv], V[c,c,a,v], optimize='optimal')
	C2[c,a,c,c] += +0.50000000 * np.einsum('ua,ijka->kuij', T1[ha,pv], V[c,c,c,v], optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iu,iajv->jvua', T1[hc,pa], V[c,v,c,a], optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iu,vawx,ux->iwva', T1[hc,pa], V[a,v,a,a], eta1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iu,vawx,ux->iwva', T1[hc,pa], V[a,v,a,a], gamma1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('ia,iujv->jvua', T1[hc,pv], V[c,a,c,a], optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('ua,vwix,wu->ixva', T1[ha,pv], V[a,a,c,a], eta1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('ua,vwix,wu->ixva', T1[ha,pv], V[a,a,c,a], gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('ia,ubva->ivub', T1[hc,pv], V[a,v,a,v], optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('ua,vbia->iuvb', T1[ha,pv], V[a,v,c,v], optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('iu,javw,uw->ivja', T1[hc,pa], V[c,v,a,a], eta1, optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('iu,javw,uw->ivja', T1[hc,pa], V[c,v,a,a], gamma1, optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('ia,jiku->kuja', T1[hc,pv], V[c,c,c,a], optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('ua,ivjw,vu->jwia', T1[ha,pv], V[c,a,c,a], eta1, optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('ua,ivjw,vu->jwia', T1[ha,pv], V[c,a,c,a], gamma1, optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('ia,jbua->iujb', T1[hc,pv], V[c,v,a,v], optimize='optimal')
	C2[c,a,c,v] += +1.00000000 * np.einsum('ua,ibja->juib', T1[ha,pv], V[c,v,c,v], optimize='optimal')
	C2[c,a,v,v] += -0.50000000 * np.einsum('iu,abvw,uw->ivab', T1[hc,pa], V[v,v,a,a], eta1, optimize='optimal')
	C2[c,a,v,v] += -0.50000000 * np.einsum('iu,abvw,uw->ivab', T1[hc,pa], V[v,v,a,a], gamma1, optimize='optimal')
	C2[c,a,v,v] += -1.00000000 * np.einsum('ia,ibju->juab', T1[hc,pv], V[c,v,c,a], optimize='optimal')
	C2[c,a,v,v] += -1.00000000 * np.einsum('ua,vbiw,vu->iwab', T1[ha,pv], V[a,v,c,a], eta1, optimize='optimal')
	C2[c,a,v,v] += -1.00000000 * np.einsum('ua,vbiw,vu->iwab', T1[ha,pv], V[a,v,c,a], gamma1, optimize='optimal')
	C2[c,a,v,v] += -0.50000000 * np.einsum('ia,bcua->iubc', T1[hc,pv], V[v,v,a,v], optimize='optimal')
	C2[c,a,v,v] += +0.50000000 * np.einsum('ua,bcia->iubc', T1[ha,pv], V[v,v,c,v], optimize='optimal')
	C2[c,c,a,a] += -0.50000000 * np.einsum('iu,ivjk->jkuv', T1[hc,pa], V[c,a,c,c], optimize='optimal')
	C2[c,c,a,a] += -0.50000000 * np.einsum('iu,vwjx,ux->ijvw', T1[hc,pa], V[a,a,c,a], eta1, optimize='optimal')
	C2[c,c,a,a] += -0.50000000 * np.einsum('iu,vwjx,ux->ijvw', T1[hc,pa], V[a,a,c,a], gamma1, optimize='optimal')
	C2[c,c,a,a] += -0.50000000 * np.einsum('ia,uvja->ijuv', T1[hc,pv], V[a,a,c,v], optimize='optimal')
	C2[c,c,c,a] += -0.50000000 * np.einsum('iu,jikl->klju', T1[hc,pa], V[c,c,c,c], optimize='optimal')
	C2[c,c,c,a] += -1.00000000 * np.einsum('iu,jvkw,uw->ikjv', T1[hc,pa], V[c,a,c,a], eta1, optimize='optimal')
	C2[c,c,c,a] += -1.00000000 * np.einsum('iu,jvkw,uw->ikjv', T1[hc,pa], V[c,a,c,a], gamma1, optimize='optimal')
	C2[c,c,c,a] += -1.00000000 * np.einsum('ia,juka->ikju', T1[hc,pv], V[c,a,c,v], optimize='optimal')
	C2[c,c,c,c] += -0.50000000 * np.einsum('iu,jklv,uv->iljk', T1[hc,pa], V[c,c,c,a], eta1, optimize='optimal')
	C2[c,c,c,c] += -0.50000000 * np.einsum('iu,jklv,uv->iljk', T1[hc,pa], V[c,c,c,a], gamma1, optimize='optimal')
	C2[c,c,c,c] += -0.50000000 * np.einsum('ia,jkla->iljk', T1[hc,pv], V[c,c,c,v], optimize='optimal')
	C2[c,c,a,v] += -0.50000000 * np.einsum('iu,iajk->jkua', T1[hc,pa], V[c,v,c,c], optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('iu,vajw,uw->ijva', T1[hc,pa], V[a,v,c,a], eta1, optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('iu,vajw,uw->ijva', T1[hc,pa], V[a,v,c,a], gamma1, optimize='optimal')
	C2[c,c,a,v] += +0.50000000 * np.einsum('ia,iujk->jkua', T1[hc,pv], V[c,a,c,c], optimize='optimal')
	C2[c,c,a,v] += -0.50000000 * np.einsum('ua,vwij,wu->ijva', T1[ha,pv], V[a,a,c,c], eta1, optimize='optimal')
	C2[c,c,a,v] += -0.50000000 * np.einsum('ua,vwij,wu->ijva', T1[ha,pv], V[a,a,c,c], gamma1, optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('ia,ubja->ijub', T1[hc,pv], V[a,v,c,v], optimize='optimal')
	C2[c,c,c,v] += -1.00000000 * np.einsum('iu,jakv,uv->ikja', T1[hc,pa], V[c,v,c,a], eta1, optimize='optimal')
	C2[c,c,c,v] += -1.00000000 * np.einsum('iu,jakv,uv->ikja', T1[hc,pa], V[c,v,c,a], gamma1, optimize='optimal')
	C2[c,c,c,v] += -0.50000000 * np.einsum('ia,jikl->klja', T1[hc,pv], V[c,c,c,c], optimize='optimal')
	C2[c,c,c,v] += -0.50000000 * np.einsum('ua,ivjk,vu->jkia', T1[ha,pv], V[c,a,c,c], eta1, optimize='optimal')
	C2[c,c,c,v] += -0.50000000 * np.einsum('ua,ivjk,vu->jkia', T1[ha,pv], V[c,a,c,c], gamma1, optimize='optimal')
	C2[c,c,c,v] += -1.00000000 * np.einsum('ia,jbka->ikjb', T1[hc,pv], V[c,v,c,v], optimize='optimal')
	C2[c,c,v,v] += -0.50000000 * np.einsum('iu,abjv,uv->ijab', T1[hc,pa], V[v,v,c,a], eta1, optimize='optimal')
	C2[c,c,v,v] += -0.50000000 * np.einsum('iu,abjv,uv->ijab', T1[hc,pa], V[v,v,c,a], gamma1, optimize='optimal')
	C2[c,c,v,v] += -0.50000000 * np.einsum('ia,ibjk->jkab', T1[hc,pv], V[c,v,c,c], optimize='optimal')
	C2[c,c,v,v] += -0.50000000 * np.einsum('ua,vbij,vu->ijab', T1[ha,pv], V[a,v,c,c], eta1, optimize='optimal')
	C2[c,c,v,v] += -0.50000000 * np.einsum('ua,vbij,vu->ijab', T1[ha,pv], V[a,v,c,c], gamma1, optimize='optimal')
	C2[c,c,v,v] += -0.50000000 * np.einsum('ia,bcja->ijbc', T1[hc,pv], V[v,v,c,v], optimize='optimal')
	C2[c,v,a,a] += -1.00000000 * np.einsum('iu,ivja->jauv', T1[hc,pa], V[c,a,c,v], optimize='optimal')
	C2[c,v,a,a] += +0.50000000 * np.einsum('iu,vwxa,ux->iavw', T1[hc,pa], V[a,a,a,v], eta1, optimize='optimal')
	C2[c,v,a,a] += +0.50000000 * np.einsum('iu,vwxa,ux->iavw', T1[hc,pa], V[a,a,a,v], gamma1, optimize='optimal')
	C2[c,v,a,a] += -0.50000000 * np.einsum('ia,uvba->ibuv', T1[hc,pv], V[a,a,v,v], optimize='optimal')
	C2[c,v,c,a] += -1.00000000 * np.einsum('iu,jika->kaju', T1[hc,pa], V[c,c,c,v], optimize='optimal')
	C2[c,v,c,a] += +1.00000000 * np.einsum('iu,jvwa,uw->iajv', T1[hc,pa], V[c,a,a,v], eta1, optimize='optimal')
	C2[c,v,c,a] += +1.00000000 * np.einsum('iu,jvwa,uw->iajv', T1[hc,pa], V[c,a,a,v], gamma1, optimize='optimal')
	C2[c,v,c,a] += -1.00000000 * np.einsum('ia,juba->ibju', T1[hc,pv], V[c,a,v,v], optimize='optimal')
	C2[c,v,c,c] += +0.50000000 * np.einsum('iu,jkva,uv->iajk', T1[hc,pa], V[c,c,a,v], eta1, optimize='optimal')
	C2[c,v,c,c] += +0.50000000 * np.einsum('iu,jkva,uv->iajk', T1[hc,pa], V[c,c,a,v], gamma1, optimize='optimal')
	C2[c,v,c,c] += -0.50000000 * np.einsum('ia,jkba->ibjk', T1[hc,pv], V[c,c,v,v], optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('iu,iajb->jbua', T1[hc,pa], V[c,v,c,v], optimize='optimal')
	C2[c,v,a,v] += +1.00000000 * np.einsum('iu,vawb,uw->ibva', T1[hc,pa], V[a,v,a,v], eta1, optimize='optimal')
	C2[c,v,a,v] += +1.00000000 * np.einsum('iu,vawb,uw->ibva', T1[hc,pa], V[a,v,a,v], gamma1, optimize='optimal')
	C2[c,v,a,v] += +1.00000000 * np.einsum('ia,iujb->jbua', T1[hc,pv], V[c,a,c,v], optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('ua,vwib,wu->ibva', T1[ha,pv], V[a,a,c,v], eta1, optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('ua,vwib,wu->ibva', T1[ha,pv], V[a,a,c,v], gamma1, optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('ia,ubca->icub', T1[hc,pv], V[a,v,v,v], optimize='optimal')
	C2[c,v,c,v] += +1.00000000 * np.einsum('iu,javb,uv->ibja', T1[hc,pa], V[c,v,a,v], eta1, optimize='optimal')
	C2[c,v,c,v] += +1.00000000 * np.einsum('iu,javb,uv->ibja', T1[hc,pa], V[c,v,a,v], gamma1, optimize='optimal')
	C2[c,v,c,v] += -1.00000000 * np.einsum('ia,jikb->kbja', T1[hc,pv], V[c,c,c,v], optimize='optimal')
	C2[c,v,c,v] += -1.00000000 * np.einsum('ua,ivjb,vu->jbia', T1[ha,pv], V[c,a,c,v], eta1, optimize='optimal')
	C2[c,v,c,v] += -1.00000000 * np.einsum('ua,ivjb,vu->jbia', T1[ha,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C2[c,v,c,v] += -1.00000000 * np.einsum('ia,jbca->icjb', T1[hc,pv], V[c,v,v,v], optimize='optimal')
	C2[c,v,v,v] += +0.50000000 * np.einsum('iu,abvc,uv->icab', T1[hc,pa], V[v,v,a,v], eta1, optimize='optimal')
	C2[c,v,v,v] += +0.50000000 * np.einsum('iu,abvc,uv->icab', T1[hc,pa], V[v,v,a,v], gamma1, optimize='optimal')
	C2[c,v,v,v] += -1.00000000 * np.einsum('ia,ibjc->jcab', T1[hc,pv], V[c,v,c,v], optimize='optimal')
	C2[c,v,v,v] += -1.00000000 * np.einsum('ua,vbic,vu->icab', T1[ha,pv], V[a,v,c,v], eta1, optimize='optimal')
	C2[c,v,v,v] += -1.00000000 * np.einsum('ua,vbic,vu->icab', T1[ha,pv], V[a,v,c,v], gamma1, optimize='optimal')
	C2[c,v,v,v] += -0.50000000 * np.einsum('ia,bcda->idbc', T1[hc,pv], V[v,v,v,v], optimize='optimal')
	C2[v,v,a,a] += -0.50000000 * np.einsum('iu,ivab->abuv', T1[hc,pa], V[c,a,v,v], optimize='optimal')
	C2[v,v,c,a] += -0.50000000 * np.einsum('iu,jiab->abju', T1[hc,pa], V[c,c,v,v], optimize='optimal')
	C2[v,v,a,v] += -0.50000000 * np.einsum('iu,iabc->bcua', T1[hc,pa], V[c,v,v,v], optimize='optimal')
	C2[v,v,a,v] += +0.50000000 * np.einsum('ia,iubc->bcua', T1[hc,pv], V[c,a,v,v], optimize='optimal')
	C2[v,v,a,v] += -0.50000000 * np.einsum('ua,vwbc,wu->bcva', T1[ha,pv], V[a,a,v,v], eta1, optimize='optimal')
	C2[v,v,a,v] += -0.50000000 * np.einsum('ua,vwbc,wu->bcva', T1[ha,pv], V[a,a,v,v], gamma1, optimize='optimal')
	C2[v,v,c,v] += -0.50000000 * np.einsum('ia,jibc->bcja', T1[hc,pv], V[c,c,v,v], optimize='optimal')
	C2[v,v,c,v] += -0.50000000 * np.einsum('ua,ivbc,vu->bcia', T1[ha,pv], V[c,a,v,v], eta1, optimize='optimal')
	C2[v,v,c,v] += -0.50000000 * np.einsum('ua,ivbc,vu->bcia', T1[ha,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C2[v,v,v,v] += -0.50000000 * np.einsum('ia,ibcd->cdab', T1[hc,pv], V[c,v,v,v], optimize='optimal')
	C2[v,v,v,v] += -0.50000000 * np.einsum('ua,vbcd,vu->cdab', T1[ha,pv], V[a,v,v,v], eta1, optimize='optimal')
	C2[v,v,v,v] += -0.50000000 * np.einsum('ua,vbcd,vu->cdab', T1[ha,pv], V[a,v,v,v], gamma1, optimize='optimal')

	t1 = time.time()
	if verbose: print("H2_T1_C2 took {:.4f} seconds to run.".format(t1-t0))

def H2_T2_C2(C1, C2, F, V, T1, T2, gamma1, eta1, lambda2, lambda3, mf, verbose=False):
	# 282 lines
	t0 = time.time()
	hc = mf.hc
	ha = mf.ha
	pa = mf.pa
	pv = mf.pv
	c = mf.core
	a = mf.active
	v = mf.virt

	C2[a,a,a,a] += +0.12500000 * np.einsum('ijuv,ijwx->wxuv', T2[hc,hc,pa,pa], V[c,c,a,a], optimize='optimal')
	C2[a,a,a,a] += +0.25000000 * np.einsum('iuvw,ixyz,xu->yzvw', T2[hc,ha,pa,pa], V[c,a,a,a], gamma1, optimize='optimal')
	C2[a,a,a,a] += +1.00000000 * np.einsum('iuvw,ixyz,wz->uyvx', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, optimize='optimal')
	C2[a,a,a,a] += +1.00000000 * np.einsum('iuva,iwxa->uxvw', T2[hc,ha,pa,pv], V[c,a,a,v], optimize='optimal')
	C2[a,a,a,a] += +1.00000000 * np.einsum('uvwa,xyza,yv->uzwx', T2[ha,ha,pa,pv], V[a,a,a,v], gamma1, optimize='optimal')
	C2[a,a,a,a] += +0.25000000 * np.einsum('uvwa,xyza,wz->uvxy', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, optimize='optimal')
	C2[a,a,a,a] += +0.12500000 * np.einsum('uvab,wxab->uvwx', T2[ha,ha,pv,pv], V[a,a,v,v], optimize='optimal')
	C2[a,a,c,a] += +1.00000000 * np.einsum('iuvw,jixy,wy->uxjv', T2[hc,ha,pa,pa], V[c,c,a,a], eta1, optimize='optimal')
	C2[a,a,c,a] += +1.00000000 * np.einsum('iuva,jiwa->uwjv', T2[hc,ha,pa,pv], V[c,c,a,v], optimize='optimal')
	C2[a,a,c,a] += -1.00000000 * np.einsum('uvwa,ixya,xv->uyiw', T2[ha,ha,pa,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C2[a,a,c,a] += +0.50000000 * np.einsum('uvwa,ixya,wy->uvix', T2[ha,ha,pa,pv], V[c,a,a,v], eta1, optimize='optimal')
	C2[a,a,c,a] += +0.25000000 * np.einsum('uvab,iwab->uviw', T2[ha,ha,pv,pv], V[c,a,v,v], optimize='optimal')
	C2[a,a,c,c] += +0.25000000 * np.einsum('uvwa,ijxa,wx->uvij', T2[ha,ha,pa,pv], V[c,c,a,v], eta1, optimize='optimal')
	C2[a,a,c,c] += +0.12500000 * np.einsum('uvab,ijab->uvij', T2[ha,ha,pv,pv], V[c,c,v,v], optimize='optimal')
	C2[a,a,a,v] += +1.00000000 * np.einsum('iuvw,iaxy,wy->uxva', T2[hc,ha,pa,pa], V[c,v,a,a], eta1, optimize='optimal')
	C2[a,a,a,v] += +0.25000000 * np.einsum('ijua,ijvw->vwua', T2[hc,hc,pa,pv], V[c,c,a,a], optimize='optimal')
	C2[a,a,a,v] += +0.50000000 * np.einsum('iuva,iwxy,wu->xyva', T2[hc,ha,pa,pv], V[c,a,a,a], gamma1, optimize='optimal')
	C2[a,a,a,v] += -0.25000000 * np.einsum('uvwa,xyzr,yv,xu->zrwa', T2[ha,ha,pa,pv], V[a,a,a,a], eta1, eta1, optimize='optimal')
	C2[a,a,a,v] += +0.25000000 * np.einsum('uvwa,xyzr,yv,xu->zrwa', T2[ha,ha,pa,pv], V[a,a,a,a], gamma1, gamma1, optimize='optimal')
	C2[a,a,a,v] += +1.00000000 * np.einsum('iuva,ibwa->uwvb', T2[hc,ha,pa,pv], V[c,v,a,v], optimize='optimal')
	C2[a,a,a,v] += -1.00000000 * np.einsum('uvwa,xbya,xv->uywb', T2[ha,ha,pa,pv], V[a,v,a,v], gamma1, optimize='optimal')
	C2[a,a,a,v] += +1.00000000 * np.einsum('iuva,iwxy,vy->uxwa', T2[hc,ha,pa,pv], V[c,a,a,a], eta1, optimize='optimal')
	C2[a,a,a,v] += -1.00000000 * np.einsum('uvwa,xyzr,yv,wr->uzxa', T2[ha,ha,pa,pv], V[a,a,a,a], eta1, gamma1, optimize='optimal')
	C2[a,a,a,v] += +1.00000000 * np.einsum('uvwa,xyzr,wr,yv->uzxa', T2[ha,ha,pa,pv], V[a,a,a,a], eta1, gamma1, optimize='optimal')
	C2[a,a,a,v] += +0.50000000 * np.einsum('uvwa,xbya,wy->uvxb', T2[ha,ha,pa,pv], V[a,v,a,v], eta1, optimize='optimal')
	C2[a,a,a,v] += -1.00000000 * np.einsum('iuab,ivwb->uwva', T2[hc,ha,pv,pv], V[c,a,a,v], optimize='optimal')
	C2[a,a,a,v] += -1.00000000 * np.einsum('uvab,wxyb,xv->uywa', T2[ha,ha,pv,pv], V[a,a,a,v], gamma1, optimize='optimal')
	C2[a,a,a,v] += +0.25000000 * np.einsum('uvab,wcab->uvwc', T2[ha,ha,pv,pv], V[a,v,v,v], optimize='optimal')
	C2[a,a,c,v] += -1.00000000 * np.einsum('iuva,jiwx,vx->uwja', T2[hc,ha,pa,pv], V[c,c,a,a], eta1, optimize='optimal')
	C2[a,a,c,v] += -1.00000000 * np.einsum('uvwa,ixyz,xv,wz->uyia', T2[ha,ha,pa,pv], V[c,a,a,a], eta1, gamma1, optimize='optimal')
	C2[a,a,c,v] += +1.00000000 * np.einsum('uvwa,ixyz,wz,xv->uyia', T2[ha,ha,pa,pv], V[c,a,a,a], eta1, gamma1, optimize='optimal')
	C2[a,a,c,v] += +0.50000000 * np.einsum('uvwa,ibxa,wx->uvib', T2[ha,ha,pa,pv], V[c,v,a,v], eta1, optimize='optimal')
	C2[a,a,c,v] += +1.00000000 * np.einsum('iuab,jivb->uvja', T2[hc,ha,pv,pv], V[c,c,a,v], optimize='optimal')
	C2[a,a,c,v] += -1.00000000 * np.einsum('uvab,iwxb,wv->uxia', T2[ha,ha,pv,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C2[a,a,c,v] += +0.25000000 * np.einsum('uvab,icab->uvic', T2[ha,ha,pv,pv], V[c,v,v,v], optimize='optimal')
	C2[a,a,v,v] += -1.00000000 * np.einsum('iuva,ibwx,vx->uwab', T2[hc,ha,pa,pv], V[c,v,a,a], eta1, optimize='optimal')
	C2[a,a,v,v] += -1.00000000 * np.einsum('uvwa,xbyz,xv,wz->uyab', T2[ha,ha,pa,pv], V[a,v,a,a], eta1, gamma1, optimize='optimal')
	C2[a,a,v,v] += +1.00000000 * np.einsum('uvwa,xbyz,wz,xv->uyab', T2[ha,ha,pa,pv], V[a,v,a,a], eta1, gamma1, optimize='optimal')
	C2[a,a,v,v] += +0.25000000 * np.einsum('uvwa,bcxa,wx->uvbc', T2[ha,ha,pa,pv], V[v,v,a,v], eta1, optimize='optimal')
	C2[a,a,v,v] += +0.12500000 * np.einsum('ijab,ijuv->uvab', T2[hc,hc,pv,pv], V[c,c,a,a], optimize='optimal')
	C2[a,a,v,v] += +0.25000000 * np.einsum('iuab,ivwx,vu->wxab', T2[hc,ha,pv,pv], V[c,a,a,a], gamma1, optimize='optimal')
	C2[a,a,v,v] += -0.12500000 * np.einsum('uvab,wxyz,xv,wu->yzab', T2[ha,ha,pv,pv], V[a,a,a,a], eta1, eta1, optimize='optimal')
	C2[a,a,v,v] += +0.12500000 * np.einsum('uvab,wxyz,xv,wu->yzab', T2[ha,ha,pv,pv], V[a,a,a,a], gamma1, gamma1, optimize='optimal')
	C2[a,a,v,v] += +1.00000000 * np.einsum('iuab,icvb->uvac', T2[hc,ha,pv,pv], V[c,v,a,v], optimize='optimal')
	C2[a,a,v,v] += -1.00000000 * np.einsum('uvab,wcxb,wv->uxac', T2[ha,ha,pv,pv], V[a,v,a,v], gamma1, optimize='optimal')
	C2[a,a,v,v] += +0.12500000 * np.einsum('uvab,cdab->uvcd', T2[ha,ha,pv,pv], V[v,v,v,v], optimize='optimal')
	C2[a,v,a,a] += +0.25000000 * np.einsum('ijuv,ijwa->wauv', T2[hc,hc,pa,pa], V[c,c,a,v], optimize='optimal')
	C2[a,v,a,a] += +0.50000000 * np.einsum('iuvw,ixya,xu->yavw', T2[hc,ha,pa,pa], V[c,a,a,v], gamma1, optimize='optimal')
	C2[a,v,a,a] += -1.00000000 * np.einsum('iuvw,ixya,wy->uavx', T2[hc,ha,pa,pa], V[c,a,a,v], eta1, optimize='optimal')
	C2[a,v,a,a] += +1.00000000 * np.einsum('iuva,iwba->ubvw', T2[hc,ha,pa,pv], V[c,a,v,v], optimize='optimal')
	C2[a,v,a,a] += +1.00000000 * np.einsum('uvwa,xyba,yv->ubwx', T2[ha,ha,pa,pv], V[a,a,v,v], gamma1, optimize='optimal')
	C2[a,v,c,a] += -1.00000000 * np.einsum('iuvw,jixa,wx->uajv', T2[hc,ha,pa,pa], V[c,c,a,v], eta1, optimize='optimal')
	C2[a,v,c,a] += +1.00000000 * np.einsum('iuva,jiba->ubjv', T2[hc,ha,pa,pv], V[c,c,v,v], optimize='optimal')
	C2[a,v,c,a] += -1.00000000 * np.einsum('uvwa,ixba,xv->ubiw', T2[ha,ha,pa,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('iuvw,iaxb,wx->ubva', T2[hc,ha,pa,pa], V[c,v,a,v], eta1, optimize='optimal')
	C2[a,v,a,v] += +0.50000000 * np.einsum('ijua,ijvb->vbua', T2[hc,hc,pa,pv], V[c,c,a,v], optimize='optimal')
	C2[a,v,a,v] += +1.00000000 * np.einsum('iuva,iwxb,wu->xbva', T2[hc,ha,pa,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C2[a,v,a,v] += -0.50000000 * np.einsum('uvwa,xyzb,yv,xu->zbwa', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, eta1, optimize='optimal')
	C2[a,v,a,v] += +0.50000000 * np.einsum('uvwa,xyzb,yv,xu->zbwa', T2[ha,ha,pa,pv], V[a,a,a,v], gamma1, gamma1, optimize='optimal')
	C2[a,v,a,v] += +1.00000000 * np.einsum('iuva,ibca->ucvb', T2[hc,ha,pa,pv], V[c,v,v,v], optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('uvwa,xbca,xv->ucwb', T2[ha,ha,pa,pv], V[a,v,v,v], gamma1, optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('iuva,iwxb,vx->ubwa', T2[hc,ha,pa,pv], V[c,a,a,v], eta1, optimize='optimal')
	C2[a,v,a,v] += +1.00000000 * np.einsum('uvwa,xyzb,yv,wz->ubxa', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, gamma1, optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('uvwa,xyzb,wz,yv->ubxa', T2[ha,ha,pa,pv], V[a,a,a,v], eta1, gamma1, optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('iuab,ivcb->ucva', T2[hc,ha,pv,pv], V[c,a,v,v], optimize='optimal')
	C2[a,v,a,v] += -1.00000000 * np.einsum('uvab,wxcb,xv->ucwa', T2[ha,ha,pv,pv], V[a,a,v,v], gamma1, optimize='optimal')
	C2[a,v,c,v] += +1.00000000 * np.einsum('iuva,jiwb,vw->ubja', T2[hc,ha,pa,pv], V[c,c,a,v], eta1, optimize='optimal')
	C2[a,v,c,v] += +1.00000000 * np.einsum('uvwa,ixyb,xv,wy->ubia', T2[ha,ha,pa,pv], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C2[a,v,c,v] += -1.00000000 * np.einsum('uvwa,ixyb,wy,xv->ubia', T2[ha,ha,pa,pv], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C2[a,v,c,v] += +1.00000000 * np.einsum('iuab,jicb->ucja', T2[hc,ha,pv,pv], V[c,c,v,v], optimize='optimal')
	C2[a,v,c,v] += -1.00000000 * np.einsum('uvab,iwcb,wv->ucia', T2[ha,ha,pv,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C2[a,v,v,v] += +1.00000000 * np.einsum('iuva,ibwc,vw->ucab', T2[hc,ha,pa,pv], V[c,v,a,v], eta1, optimize='optimal')
	C2[a,v,v,v] += +1.00000000 * np.einsum('uvwa,xbyc,xv,wy->ucab', T2[ha,ha,pa,pv], V[a,v,a,v], eta1, gamma1, optimize='optimal')
	C2[a,v,v,v] += -1.00000000 * np.einsum('uvwa,xbyc,wy,xv->ucab', T2[ha,ha,pa,pv], V[a,v,a,v], eta1, gamma1, optimize='optimal')
	C2[a,v,v,v] += +0.25000000 * np.einsum('ijab,ijuc->ucab', T2[hc,hc,pv,pv], V[c,c,a,v], optimize='optimal')
	C2[a,v,v,v] += +0.50000000 * np.einsum('iuab,ivwc,vu->wcab', T2[hc,ha,pv,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C2[a,v,v,v] += -0.25000000 * np.einsum('uvab,wxyc,xv,wu->ycab', T2[ha,ha,pv,pv], V[a,a,a,v], eta1, eta1, optimize='optimal')
	C2[a,v,v,v] += +0.25000000 * np.einsum('uvab,wxyc,xv,wu->ycab', T2[ha,ha,pv,pv], V[a,a,a,v], gamma1, gamma1, optimize='optimal')
	C2[a,v,v,v] += +1.00000000 * np.einsum('iuab,icdb->udac', T2[hc,ha,pv,pv], V[c,v,v,v], optimize='optimal')
	C2[a,v,v,v] += -1.00000000 * np.einsum('uvab,wcdb,wv->udac', T2[ha,ha,pv,pv], V[a,v,v,v], gamma1, optimize='optimal')
	C2[c,a,a,a] += +0.25000000 * np.einsum('ijuv,ijkw->kwuv', T2[hc,hc,pa,pa], V[c,c,c,a], optimize='optimal')
	C2[c,a,a,a] += +0.50000000 * np.einsum('iuvw,ixjy,xu->jyvw', T2[hc,ha,pa,pa], V[c,a,c,a], gamma1, optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('ijuv,jwxy,vy->ixuw', T2[hc,hc,pa,pa], V[c,a,a,a], eta1, optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('iuvw,xyzr,yu,wr->izvx', T2[hc,ha,pa,pa], V[a,a,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,a,a] += +1.00000000 * np.einsum('iuvw,xyzr,wr,yu->izvx', T2[hc,ha,pa,pa], V[a,a,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('iuvw,ixjy,wy->juvx', T2[hc,ha,pa,pa], V[c,a,c,a], eta1, optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('ijua,jvwa->iwuv', T2[hc,hc,pa,pv], V[c,a,a,v], optimize='optimal')
	C2[c,a,a,a] += +1.00000000 * np.einsum('iuva,wxya,xu->iyvw', T2[hc,ha,pa,pv], V[a,a,a,v], gamma1, optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('iuva,iwja->juvw', T2[hc,ha,pa,pv], V[c,a,c,v], optimize='optimal')
	C2[c,a,a,a] += -1.00000000 * np.einsum('uvwa,xyia,yv->iuwx', T2[ha,ha,pa,pv], V[a,a,c,v], gamma1, optimize='optimal')
	C2[c,a,a,a] += +0.25000000 * np.einsum('iuvw,xyzr,wr,vz->iuxy', T2[hc,ha,pa,pa], V[a,a,a,a], eta1, eta1, optimize='optimal')
	C2[c,a,a,a] += -0.25000000 * np.einsum('iuvw,xyzr,wr,vz->iuxy', T2[hc,ha,pa,pa], V[a,a,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,a,a,a] += +0.50000000 * np.einsum('iuva,wxya,vy->iuwx', T2[hc,ha,pa,pv], V[a,a,a,v], eta1, optimize='optimal')
	C2[c,a,a,a] += +0.25000000 * np.einsum('iuab,vwab->iuvw', T2[hc,ha,pv,pv], V[a,a,v,v], optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('ijuv,kjwx,vx->iwku', T2[hc,hc,pa,pa], V[c,c,a,a], eta1, optimize='optimal')
	C2[c,a,c,a] += +1.00000000 * np.einsum('iuvw,jxyz,xu,wz->iyjv', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('iuvw,jxyz,wz,xu->iyjv', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('iuvw,jikx,wx->kujv', T2[hc,ha,pa,pa], V[c,c,c,a], eta1, optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('ijua,kjva->ivku', T2[hc,hc,pa,pv], V[c,c,a,v], optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('iuva,jwxa,wu->ixjv', T2[hc,ha,pa,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C2[c,a,c,a] += -1.00000000 * np.einsum('iuva,jika->kujv', T2[hc,ha,pa,pv], V[c,c,c,v], optimize='optimal')
	C2[c,a,c,a] += +1.00000000 * np.einsum('uvwa,ixja,xv->juiw', T2[ha,ha,pa,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C2[c,a,c,a] += +0.50000000 * np.einsum('iuvw,jxyz,wz,vy->iujx', T2[hc,ha,pa,pa], V[c,a,a,a], eta1, eta1, optimize='optimal')
	C2[c,a,c,a] += -0.50000000 * np.einsum('iuvw,jxyz,wz,vy->iujx', T2[hc,ha,pa,pa], V[c,a,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,a,c,a] += +1.00000000 * np.einsum('iuva,jwxa,vx->iujw', T2[hc,ha,pa,pv], V[c,a,a,v], eta1, optimize='optimal')
	C2[c,a,c,a] += +0.50000000 * np.einsum('iuab,jvab->iujv', T2[hc,ha,pv,pv], V[c,a,v,v], optimize='optimal')
	C2[c,a,c,c] += +0.25000000 * np.einsum('iuvw,jkxy,wy,vx->iujk', T2[hc,ha,pa,pa], V[c,c,a,a], eta1, eta1, optimize='optimal')
	C2[c,a,c,c] += -0.25000000 * np.einsum('iuvw,jkxy,wy,vx->iujk', T2[hc,ha,pa,pa], V[c,c,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,a,c,c] += +0.50000000 * np.einsum('iuva,jkwa,vw->iujk', T2[hc,ha,pa,pv], V[c,c,a,v], eta1, optimize='optimal')
	C2[c,a,c,c] += +0.25000000 * np.einsum('iuab,jkab->iujk', T2[hc,ha,pv,pv], V[c,c,v,v], optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('ijuv,jawx,vx->iwua', T2[hc,hc,pa,pa], V[c,v,a,a], eta1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('iuvw,xayz,xu,wz->iyva', T2[hc,ha,pa,pa], V[a,v,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iuvw,xayz,wz,xu->iyva', T2[hc,ha,pa,pa], V[a,v,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iuvw,iajx,wx->juva', T2[hc,ha,pa,pa], V[c,v,c,a], eta1, optimize='optimal')
	C2[c,a,a,v] += +0.50000000 * np.einsum('ijua,ijkv->kvua', T2[hc,hc,pa,pv], V[c,c,c,a], optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('iuva,iwjx,wu->jxva', T2[hc,ha,pa,pv], V[c,a,c,a], gamma1, optimize='optimal')
	C2[c,a,a,v] += -0.50000000 * np.einsum('uvwa,xyiz,yv,xu->izwa', T2[ha,ha,pa,pv], V[a,a,c,a], eta1, eta1, optimize='optimal')
	C2[c,a,a,v] += +0.50000000 * np.einsum('uvwa,xyiz,yv,xu->izwa', T2[ha,ha,pa,pv], V[a,a,c,a], gamma1, gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('ijua,jbva->ivub', T2[hc,hc,pa,pv], V[c,v,a,v], optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iuva,wbxa,wu->ixvb', T2[hc,ha,pa,pv], V[a,v,a,v], gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iuva,ibja->juvb', T2[hc,ha,pa,pv], V[c,v,c,v], optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('uvwa,xbia,xv->iuwb', T2[ha,ha,pa,pv], V[a,v,c,v], gamma1, optimize='optimal')
	C2[c,a,a,v] += +0.50000000 * np.einsum('iuvw,xayz,wz,vy->iuxa', T2[hc,ha,pa,pa], V[a,v,a,a], eta1, eta1, optimize='optimal')
	C2[c,a,a,v] += -0.50000000 * np.einsum('iuvw,xayz,wz,vy->iuxa', T2[hc,ha,pa,pa], V[a,v,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('ijua,jvwx,ux->iwva', T2[hc,hc,pa,pv], V[c,a,a,a], eta1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iuva,wxyz,xu,vz->iywa', T2[hc,ha,pa,pv], V[a,a,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('iuva,wxyz,vz,xu->iywa', T2[hc,ha,pa,pv], V[a,a,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iuva,iwjx,vx->juwa', T2[hc,ha,pa,pv], V[c,a,c,a], eta1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('uvwa,xyiz,yv,wz->iuxa', T2[ha,ha,pa,pv], V[a,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('uvwa,xyiz,wz,yv->iuxa', T2[ha,ha,pa,pv], V[a,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('iuva,wbxa,vx->iuwb', T2[hc,ha,pa,pv], V[a,v,a,v], eta1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('ijab,juvb->ivua', T2[hc,hc,pv,pv], V[c,a,a,v], optimize='optimal')
	C2[c,a,a,v] += -1.00000000 * np.einsum('iuab,vwxb,wu->ixva', T2[hc,ha,pv,pv], V[a,a,a,v], gamma1, optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('iuab,ivjb->juva', T2[hc,ha,pv,pv], V[c,a,c,v], optimize='optimal')
	C2[c,a,a,v] += +1.00000000 * np.einsum('uvab,wxib,xv->iuwa', T2[ha,ha,pv,pv], V[a,a,c,v], gamma1, optimize='optimal')
	C2[c,a,a,v] += +0.50000000 * np.einsum('iuab,vcab->iuvc', T2[hc,ha,pv,pv], V[a,v,v,v], optimize='optimal')
	C2[c,a,c,v] += +0.50000000 * np.einsum('iuvw,jaxy,wy,vx->iuja', T2[hc,ha,pa,pa], V[c,v,a,a], eta1, eta1, optimize='optimal')
	C2[c,a,c,v] += -0.50000000 * np.einsum('iuvw,jaxy,wy,vx->iuja', T2[hc,ha,pa,pa], V[c,v,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,a,c,v] += +1.00000000 * np.einsum('ijua,kjvw,uw->ivka', T2[hc,hc,pa,pv], V[c,c,a,a], eta1, optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('iuva,jwxy,wu,vy->ixja', T2[hc,ha,pa,pv], V[c,a,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,c,v] += +1.00000000 * np.einsum('iuva,jwxy,vy,wu->ixja', T2[hc,ha,pa,pv], V[c,a,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,c,v] += +1.00000000 * np.einsum('iuva,jikw,vw->kuja', T2[hc,ha,pa,pv], V[c,c,c,a], eta1, optimize='optimal')
	C2[c,a,c,v] += +1.00000000 * np.einsum('uvwa,ixjy,xv,wy->juia', T2[ha,ha,pa,pv], V[c,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('uvwa,ixjy,wy,xv->juia', T2[ha,ha,pa,pv], V[c,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,a,c,v] += +1.00000000 * np.einsum('iuva,jbwa,vw->iujb', T2[hc,ha,pa,pv], V[c,v,a,v], eta1, optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('ijab,kjub->iuka', T2[hc,hc,pv,pv], V[c,c,a,v], optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('iuab,jvwb,vu->iwja', T2[hc,ha,pv,pv], V[c,a,a,v], gamma1, optimize='optimal')
	C2[c,a,c,v] += -1.00000000 * np.einsum('iuab,jikb->kuja', T2[hc,ha,pv,pv], V[c,c,c,v], optimize='optimal')
	C2[c,a,c,v] += +1.00000000 * np.einsum('uvab,iwjb,wv->juia', T2[ha,ha,pv,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C2[c,a,c,v] += +0.50000000 * np.einsum('iuab,jcab->iujc', T2[hc,ha,pv,pv], V[c,v,v,v], optimize='optimal')
	C2[c,a,v,v] += +0.25000000 * np.einsum('iuvw,abxy,wy,vx->iuab', T2[hc,ha,pa,pa], V[v,v,a,a], eta1, eta1, optimize='optimal')
	C2[c,a,v,v] += -0.25000000 * np.einsum('iuvw,abxy,wy,vx->iuab', T2[hc,ha,pa,pa], V[v,v,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,a,v,v] += +1.00000000 * np.einsum('ijua,jbvw,uw->ivab', T2[hc,hc,pa,pv], V[c,v,a,a], eta1, optimize='optimal')
	C2[c,a,v,v] += -1.00000000 * np.einsum('iuva,wbxy,wu,vy->ixab', T2[hc,ha,pa,pv], V[a,v,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,v,v] += +1.00000000 * np.einsum('iuva,wbxy,vy,wu->ixab', T2[hc,ha,pa,pv], V[a,v,a,a], eta1, gamma1, optimize='optimal')
	C2[c,a,v,v] += +1.00000000 * np.einsum('iuva,ibjw,vw->juab', T2[hc,ha,pa,pv], V[c,v,c,a], eta1, optimize='optimal')
	C2[c,a,v,v] += +1.00000000 * np.einsum('uvwa,xbiy,xv,wy->iuab', T2[ha,ha,pa,pv], V[a,v,c,a], eta1, gamma1, optimize='optimal')
	C2[c,a,v,v] += -1.00000000 * np.einsum('uvwa,xbiy,wy,xv->iuab', T2[ha,ha,pa,pv], V[a,v,c,a], eta1, gamma1, optimize='optimal')
	C2[c,a,v,v] += +0.50000000 * np.einsum('iuva,bcwa,vw->iubc', T2[hc,ha,pa,pv], V[v,v,a,v], eta1, optimize='optimal')
	C2[c,a,v,v] += +0.25000000 * np.einsum('ijab,ijku->kuab', T2[hc,hc,pv,pv], V[c,c,c,a], optimize='optimal')
	C2[c,a,v,v] += +0.50000000 * np.einsum('iuab,ivjw,vu->jwab', T2[hc,ha,pv,pv], V[c,a,c,a], gamma1, optimize='optimal')
	C2[c,a,v,v] += -0.25000000 * np.einsum('uvab,wxiy,xv,wu->iyab', T2[ha,ha,pv,pv], V[a,a,c,a], eta1, eta1, optimize='optimal')
	C2[c,a,v,v] += +0.25000000 * np.einsum('uvab,wxiy,xv,wu->iyab', T2[ha,ha,pv,pv], V[a,a,c,a], gamma1, gamma1, optimize='optimal')
	C2[c,a,v,v] += -1.00000000 * np.einsum('ijab,jcub->iuac', T2[hc,hc,pv,pv], V[c,v,a,v], optimize='optimal')
	C2[c,a,v,v] += -1.00000000 * np.einsum('iuab,vcwb,vu->iwac', T2[hc,ha,pv,pv], V[a,v,a,v], gamma1, optimize='optimal')
	C2[c,a,v,v] += -1.00000000 * np.einsum('iuab,icjb->juac', T2[hc,ha,pv,pv], V[c,v,c,v], optimize='optimal')
	C2[c,a,v,v] += +1.00000000 * np.einsum('uvab,wcib,wv->iuac', T2[ha,ha,pv,pv], V[a,v,c,v], gamma1, optimize='optimal')
	C2[c,a,v,v] += +0.25000000 * np.einsum('iuab,cdab->iucd', T2[hc,ha,pv,pv], V[v,v,v,v], optimize='optimal')
	C2[c,c,a,a] += +0.12500000 * np.einsum('ijuv,ijkl->kluv', T2[hc,hc,pa,pa], V[c,c,c,c], optimize='optimal')
	C2[c,c,a,a] += +0.25000000 * np.einsum('iuvw,ixjk,xu->jkvw', T2[hc,ha,pa,pa], V[c,a,c,c], gamma1, optimize='optimal')
	C2[c,c,a,a] += -1.00000000 * np.einsum('ijuv,jwkx,vx->ikuw', T2[hc,hc,pa,pa], V[c,a,c,a], eta1, optimize='optimal')
	C2[c,c,a,a] += -1.00000000 * np.einsum('iuvw,xyjz,yu,wz->ijvx', T2[hc,ha,pa,pa], V[a,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,a,a] += +1.00000000 * np.einsum('iuvw,xyjz,wz,yu->ijvx', T2[hc,ha,pa,pa], V[a,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,a,a] += -1.00000000 * np.einsum('ijua,jvka->ikuv', T2[hc,hc,pa,pv], V[c,a,c,v], optimize='optimal')
	C2[c,c,a,a] += +1.00000000 * np.einsum('iuva,wxja,xu->ijvw', T2[hc,ha,pa,pv], V[a,a,c,v], gamma1, optimize='optimal')
	C2[c,c,a,a] += +0.12500000 * np.einsum('ijuv,wxyz,vz,uy->ijwx', T2[hc,hc,pa,pa], V[a,a,a,a], eta1, eta1, optimize='optimal')
	C2[c,c,a,a] += -0.12500000 * np.einsum('ijuv,wxyz,vz,uy->ijwx', T2[hc,hc,pa,pa], V[a,a,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,c,a,a] += +0.25000000 * np.einsum('ijua,vwxa,ux->ijvw', T2[hc,hc,pa,pv], V[a,a,a,v], eta1, optimize='optimal')
	C2[c,c,a,a] += +0.12500000 * np.einsum('ijab,uvab->ijuv', T2[hc,hc,pv,pv], V[a,a,v,v], optimize='optimal')
	C2[c,c,c,a] += -1.00000000 * np.einsum('ijuv,kjlw,vw->ilku', T2[hc,hc,pa,pa], V[c,c,c,a], eta1, optimize='optimal')
	C2[c,c,c,a] += +1.00000000 * np.einsum('iuvw,jxky,xu,wy->ikjv', T2[hc,ha,pa,pa], V[c,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,c,a] += -1.00000000 * np.einsum('iuvw,jxky,wy,xu->ikjv', T2[hc,ha,pa,pa], V[c,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,c,a] += -1.00000000 * np.einsum('ijua,kjla->ilku', T2[hc,hc,pa,pv], V[c,c,c,v], optimize='optimal')
	C2[c,c,c,a] += -1.00000000 * np.einsum('iuva,jwka,wu->ikjv', T2[hc,ha,pa,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C2[c,c,c,a] += +0.25000000 * np.einsum('ijuv,kwxy,vy,ux->ijkw', T2[hc,hc,pa,pa], V[c,a,a,a], eta1, eta1, optimize='optimal')
	C2[c,c,c,a] += -0.25000000 * np.einsum('ijuv,kwxy,vy,ux->ijkw', T2[hc,hc,pa,pa], V[c,a,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,c,c,a] += +0.50000000 * np.einsum('ijua,kvwa,uw->ijkv', T2[hc,hc,pa,pv], V[c,a,a,v], eta1, optimize='optimal')
	C2[c,c,c,a] += +0.25000000 * np.einsum('ijab,kuab->ijku', T2[hc,hc,pv,pv], V[c,a,v,v], optimize='optimal')
	C2[c,c,c,c] += +0.12500000 * np.einsum('ijuv,klwx,vx,uw->ijkl', T2[hc,hc,pa,pa], V[c,c,a,a], eta1, eta1, optimize='optimal')
	C2[c,c,c,c] += -0.12500000 * np.einsum('ijuv,klwx,vx,uw->ijkl', T2[hc,hc,pa,pa], V[c,c,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,c,c,c] += +0.25000000 * np.einsum('ijua,klva,uv->ijkl', T2[hc,hc,pa,pv], V[c,c,a,v], eta1, optimize='optimal')
	C2[c,c,c,c] += +0.12500000 * np.einsum('ijab,klab->ijkl', T2[hc,hc,pv,pv], V[c,c,v,v], optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('ijuv,jakw,vw->ikua', T2[hc,hc,pa,pa], V[c,v,c,a], eta1, optimize='optimal')
	C2[c,c,a,v] += +1.00000000 * np.einsum('iuvw,xajy,xu,wy->ijva', T2[hc,ha,pa,pa], V[a,v,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('iuvw,xajy,wy,xu->ijva', T2[hc,ha,pa,pa], V[a,v,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,a,v] += +0.25000000 * np.einsum('ijua,ijkl->klua', T2[hc,hc,pa,pv], V[c,c,c,c], optimize='optimal')
	C2[c,c,a,v] += +0.50000000 * np.einsum('iuva,iwjk,wu->jkva', T2[hc,ha,pa,pv], V[c,a,c,c], gamma1, optimize='optimal')
	C2[c,c,a,v] += -0.25000000 * np.einsum('uvwa,xyij,yv,xu->ijwa', T2[ha,ha,pa,pv], V[a,a,c,c], eta1, eta1, optimize='optimal')
	C2[c,c,a,v] += +0.25000000 * np.einsum('uvwa,xyij,yv,xu->ijwa', T2[ha,ha,pa,pv], V[a,a,c,c], gamma1, gamma1, optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('ijua,jbka->ikub', T2[hc,hc,pa,pv], V[c,v,c,v], optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('iuva,wbja,wu->ijvb', T2[hc,ha,pa,pv], V[a,v,c,v], gamma1, optimize='optimal')
	C2[c,c,a,v] += +0.25000000 * np.einsum('ijuv,waxy,vy,ux->ijwa', T2[hc,hc,pa,pa], V[a,v,a,a], eta1, eta1, optimize='optimal')
	C2[c,c,a,v] += -0.25000000 * np.einsum('ijuv,waxy,vy,ux->ijwa', T2[hc,hc,pa,pa], V[a,v,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('ijua,jvkw,uw->ikva', T2[hc,hc,pa,pv], V[c,a,c,a], eta1, optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('iuva,wxjy,xu,vy->ijwa', T2[hc,ha,pa,pv], V[a,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,a,v] += +1.00000000 * np.einsum('iuva,wxjy,vy,xu->ijwa', T2[hc,ha,pa,pv], V[a,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,a,v] += +0.50000000 * np.einsum('ijua,vbwa,uw->ijvb', T2[hc,hc,pa,pv], V[a,v,a,v], eta1, optimize='optimal')
	C2[c,c,a,v] += +1.00000000 * np.einsum('ijab,jukb->ikua', T2[hc,hc,pv,pv], V[c,a,c,v], optimize='optimal')
	C2[c,c,a,v] += -1.00000000 * np.einsum('iuab,vwjb,wu->ijva', T2[hc,ha,pv,pv], V[a,a,c,v], gamma1, optimize='optimal')
	C2[c,c,a,v] += +0.25000000 * np.einsum('ijab,ucab->ijuc', T2[hc,hc,pv,pv], V[a,v,v,v], optimize='optimal')
	C2[c,c,c,v] += +0.25000000 * np.einsum('ijuv,kawx,vx,uw->ijka', T2[hc,hc,pa,pa], V[c,v,a,a], eta1, eta1, optimize='optimal')
	C2[c,c,c,v] += -0.25000000 * np.einsum('ijuv,kawx,vx,uw->ijka', T2[hc,hc,pa,pa], V[c,v,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,c,c,v] += +1.00000000 * np.einsum('ijua,kjlv,uv->ilka', T2[hc,hc,pa,pv], V[c,c,c,a], eta1, optimize='optimal')
	C2[c,c,c,v] += -1.00000000 * np.einsum('iuva,jwkx,wu,vx->ikja', T2[hc,ha,pa,pv], V[c,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,c,v] += +1.00000000 * np.einsum('iuva,jwkx,vx,wu->ikja', T2[hc,ha,pa,pv], V[c,a,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,c,v] += +0.50000000 * np.einsum('ijua,kbva,uv->ijkb', T2[hc,hc,pa,pv], V[c,v,a,v], eta1, optimize='optimal')
	C2[c,c,c,v] += -1.00000000 * np.einsum('ijab,kjlb->ilka', T2[hc,hc,pv,pv], V[c,c,c,v], optimize='optimal')
	C2[c,c,c,v] += -1.00000000 * np.einsum('iuab,jvkb,vu->ikja', T2[hc,ha,pv,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C2[c,c,c,v] += +0.25000000 * np.einsum('ijab,kcab->ijkc', T2[hc,hc,pv,pv], V[c,v,v,v], optimize='optimal')
	C2[c,c,v,v] += +0.12500000 * np.einsum('ijuv,abwx,vx,uw->ijab', T2[hc,hc,pa,pa], V[v,v,a,a], eta1, eta1, optimize='optimal')
	C2[c,c,v,v] += -0.12500000 * np.einsum('ijuv,abwx,vx,uw->ijab', T2[hc,hc,pa,pa], V[v,v,a,a], gamma1, gamma1, optimize='optimal')
	C2[c,c,v,v] += +1.00000000 * np.einsum('ijua,jbkv,uv->ikab', T2[hc,hc,pa,pv], V[c,v,c,a], eta1, optimize='optimal')
	C2[c,c,v,v] += -1.00000000 * np.einsum('iuva,wbjx,wu,vx->ijab', T2[hc,ha,pa,pv], V[a,v,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,v,v] += +1.00000000 * np.einsum('iuva,wbjx,vx,wu->ijab', T2[hc,ha,pa,pv], V[a,v,c,a], eta1, gamma1, optimize='optimal')
	C2[c,c,v,v] += +0.25000000 * np.einsum('ijua,bcva,uv->ijbc', T2[hc,hc,pa,pv], V[v,v,a,v], eta1, optimize='optimal')
	C2[c,c,v,v] += +0.12500000 * np.einsum('ijab,ijkl->klab', T2[hc,hc,pv,pv], V[c,c,c,c], optimize='optimal')
	C2[c,c,v,v] += +0.25000000 * np.einsum('iuab,ivjk,vu->jkab', T2[hc,ha,pv,pv], V[c,a,c,c], gamma1, optimize='optimal')
	C2[c,c,v,v] += -0.12500000 * np.einsum('uvab,wxij,xv,wu->ijab', T2[ha,ha,pv,pv], V[a,a,c,c], eta1, eta1, optimize='optimal')
	C2[c,c,v,v] += +0.12500000 * np.einsum('uvab,wxij,xv,wu->ijab', T2[ha,ha,pv,pv], V[a,a,c,c], gamma1, gamma1, optimize='optimal')
	C2[c,c,v,v] += -1.00000000 * np.einsum('ijab,jckb->ikac', T2[hc,hc,pv,pv], V[c,v,c,v], optimize='optimal')
	C2[c,c,v,v] += -1.00000000 * np.einsum('iuab,vcjb,vu->ijac', T2[hc,ha,pv,pv], V[a,v,c,v], gamma1, optimize='optimal')
	C2[c,c,v,v] += +0.12500000 * np.einsum('ijab,cdab->ijcd', T2[hc,hc,pv,pv], V[v,v,v,v], optimize='optimal')
	C2[c,v,a,a] += +0.25000000 * np.einsum('ijuv,ijka->kauv', T2[hc,hc,pa,pa], V[c,c,c,v], optimize='optimal')
	C2[c,v,a,a] += +0.50000000 * np.einsum('iuvw,ixja,xu->javw', T2[hc,ha,pa,pa], V[c,a,c,v], gamma1, optimize='optimal')
	C2[c,v,a,a] += +1.00000000 * np.einsum('ijuv,jwxa,vx->iauw', T2[hc,hc,pa,pa], V[c,a,a,v], eta1, optimize='optimal')
	C2[c,v,a,a] += +1.00000000 * np.einsum('iuvw,xyza,yu,wz->iavx', T2[hc,ha,pa,pa], V[a,a,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,a,a] += -1.00000000 * np.einsum('iuvw,xyza,wz,yu->iavx', T2[hc,ha,pa,pa], V[a,a,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,a,a] += -1.00000000 * np.einsum('ijua,jvba->ibuv', T2[hc,hc,pa,pv], V[c,a,v,v], optimize='optimal')
	C2[c,v,a,a] += +1.00000000 * np.einsum('iuva,wxba,xu->ibvw', T2[hc,ha,pa,pv], V[a,a,v,v], gamma1, optimize='optimal')
	C2[c,v,c,a] += +1.00000000 * np.einsum('ijuv,kjwa,vw->iaku', T2[hc,hc,pa,pa], V[c,c,a,v], eta1, optimize='optimal')
	C2[c,v,c,a] += -1.00000000 * np.einsum('iuvw,jxya,xu,wy->iajv', T2[hc,ha,pa,pa], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,c,a] += +1.00000000 * np.einsum('iuvw,jxya,wy,xu->iajv', T2[hc,ha,pa,pa], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,c,a] += -1.00000000 * np.einsum('ijua,kjba->ibku', T2[hc,hc,pa,pv], V[c,c,v,v], optimize='optimal')
	C2[c,v,c,a] += -1.00000000 * np.einsum('iuva,jwba,wu->ibjv', T2[hc,ha,pa,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C2[c,v,a,v] += +1.00000000 * np.einsum('ijuv,jawb,vw->ibua', T2[hc,hc,pa,pa], V[c,v,a,v], eta1, optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('iuvw,xayb,xu,wy->ibva', T2[hc,ha,pa,pa], V[a,v,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,a,v] += +1.00000000 * np.einsum('iuvw,xayb,wy,xu->ibva', T2[hc,ha,pa,pa], V[a,v,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,a,v] += +0.50000000 * np.einsum('ijua,ijkb->kbua', T2[hc,hc,pa,pv], V[c,c,c,v], optimize='optimal')
	C2[c,v,a,v] += +1.00000000 * np.einsum('iuva,iwjb,wu->jbva', T2[hc,ha,pa,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C2[c,v,a,v] += -0.50000000 * np.einsum('uvwa,xyib,yv,xu->ibwa', T2[ha,ha,pa,pv], V[a,a,c,v], eta1, eta1, optimize='optimal')
	C2[c,v,a,v] += +0.50000000 * np.einsum('uvwa,xyib,yv,xu->ibwa', T2[ha,ha,pa,pv], V[a,a,c,v], gamma1, gamma1, optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('ijua,jbca->icub', T2[hc,hc,pa,pv], V[c,v,v,v], optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('iuva,wbca,wu->icvb', T2[hc,ha,pa,pv], V[a,v,v,v], gamma1, optimize='optimal')
	C2[c,v,a,v] += +1.00000000 * np.einsum('ijua,jvwb,uw->ibva', T2[hc,hc,pa,pv], V[c,a,a,v], eta1, optimize='optimal')
	C2[c,v,a,v] += +1.00000000 * np.einsum('iuva,wxyb,xu,vy->ibwa', T2[hc,ha,pa,pv], V[a,a,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('iuva,wxyb,vy,xu->ibwa', T2[hc,ha,pa,pv], V[a,a,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,a,v] += +1.00000000 * np.einsum('ijab,jucb->icua', T2[hc,hc,pv,pv], V[c,a,v,v], optimize='optimal')
	C2[c,v,a,v] += -1.00000000 * np.einsum('iuab,vwcb,wu->icva', T2[hc,ha,pv,pv], V[a,a,v,v], gamma1, optimize='optimal')
	C2[c,v,c,v] += -1.00000000 * np.einsum('ijua,kjvb,uv->ibka', T2[hc,hc,pa,pv], V[c,c,a,v], eta1, optimize='optimal')
	C2[c,v,c,v] += +1.00000000 * np.einsum('iuva,jwxb,wu,vx->ibja', T2[hc,ha,pa,pv], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,c,v] += -1.00000000 * np.einsum('iuva,jwxb,vx,wu->ibja', T2[hc,ha,pa,pv], V[c,a,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,c,v] += -1.00000000 * np.einsum('ijab,kjcb->icka', T2[hc,hc,pv,pv], V[c,c,v,v], optimize='optimal')
	C2[c,v,c,v] += -1.00000000 * np.einsum('iuab,jvcb,vu->icja', T2[hc,ha,pv,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C2[c,v,v,v] += -1.00000000 * np.einsum('ijua,jbvc,uv->icab', T2[hc,hc,pa,pv], V[c,v,a,v], eta1, optimize='optimal')
	C2[c,v,v,v] += +1.00000000 * np.einsum('iuva,wbxc,wu,vx->icab', T2[hc,ha,pa,pv], V[a,v,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,v,v] += -1.00000000 * np.einsum('iuva,wbxc,vx,wu->icab', T2[hc,ha,pa,pv], V[a,v,a,v], eta1, gamma1, optimize='optimal')
	C2[c,v,v,v] += +0.25000000 * np.einsum('ijab,ijkc->kcab', T2[hc,hc,pv,pv], V[c,c,c,v], optimize='optimal')
	C2[c,v,v,v] += +0.50000000 * np.einsum('iuab,ivjc,vu->jcab', T2[hc,ha,pv,pv], V[c,a,c,v], gamma1, optimize='optimal')
	C2[c,v,v,v] += -0.25000000 * np.einsum('uvab,wxic,xv,wu->icab', T2[ha,ha,pv,pv], V[a,a,c,v], eta1, eta1, optimize='optimal')
	C2[c,v,v,v] += +0.25000000 * np.einsum('uvab,wxic,xv,wu->icab', T2[ha,ha,pv,pv], V[a,a,c,v], gamma1, gamma1, optimize='optimal')
	C2[c,v,v,v] += -1.00000000 * np.einsum('ijab,jcdb->idac', T2[hc,hc,pv,pv], V[c,v,v,v], optimize='optimal')
	C2[c,v,v,v] += -1.00000000 * np.einsum('iuab,vcdb,vu->idac', T2[hc,ha,pv,pv], V[a,v,v,v], gamma1, optimize='optimal')
	C2[v,v,a,a] += +0.12500000 * np.einsum('ijuv,ijab->abuv', T2[hc,hc,pa,pa], V[c,c,v,v], optimize='optimal')
	C2[v,v,a,a] += +0.25000000 * np.einsum('iuvw,ixab,xu->abvw', T2[hc,ha,pa,pa], V[c,a,v,v], gamma1, optimize='optimal')
	C2[v,v,a,v] += +0.25000000 * np.einsum('ijua,ijbc->bcua', T2[hc,hc,pa,pv], V[c,c,v,v], optimize='optimal')
	C2[v,v,a,v] += +0.50000000 * np.einsum('iuva,iwbc,wu->bcva', T2[hc,ha,pa,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C2[v,v,a,v] += -0.25000000 * np.einsum('uvwa,xybc,yv,xu->bcwa', T2[ha,ha,pa,pv], V[a,a,v,v], eta1, eta1, optimize='optimal')
	C2[v,v,a,v] += +0.25000000 * np.einsum('uvwa,xybc,yv,xu->bcwa', T2[ha,ha,pa,pv], V[a,a,v,v], gamma1, gamma1, optimize='optimal')
	C2[v,v,v,v] += +0.12500000 * np.einsum('ijab,ijcd->cdab', T2[hc,hc,pv,pv], V[c,c,v,v], optimize='optimal')
	C2[v,v,v,v] += +0.25000000 * np.einsum('iuab,ivcd,vu->cdab', T2[hc,ha,pv,pv], V[c,a,v,v], gamma1, optimize='optimal')
	C2[v,v,v,v] += -0.12500000 * np.einsum('uvab,wxcd,xv,wu->cdab', T2[ha,ha,pv,pv], V[a,a,v,v], eta1, eta1, optimize='optimal')
	C2[v,v,v,v] += +0.12500000 * np.einsum('uvab,wxcd,xv,wu->cdab', T2[ha,ha,pv,pv], V[a,a,v,v], gamma1, gamma1, optimize='optimal')

	t1 = time.time()
	if verbose: print("H2_T2_C2 took {:.4f} seconds to run.".format(t1-t0))

